<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SbtAds', 'doctrine');

/**
 * BaseSbtAds
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $ad_position
 * @property string $ad_name
 * @property string $ad_type
 * @property string $is_enabled
 * @property string $ccounter_id
 * @property integer $priority
 * @property string $ad_title
 * @property string $ad_target
 * @property integer $display_count
 * @property integer $total_display_count
 * @property boolean $is_archive
 * 
 * @method integer getId()                  Returns the current record's "id" value
 * @method string  getAdPosition()          Returns the current record's "ad_position" value
 * @method string  getAdName()              Returns the current record's "ad_name" value
 * @method string  getAdType()              Returns the current record's "ad_type" value
 * @method string  getIsEnabled()           Returns the current record's "is_enabled" value
 * @method string  getCcounterId()          Returns the current record's "ccounter_id" value
 * @method integer getPriority()            Returns the current record's "priority" value
 * @method string  getAdTitle()             Returns the current record's "ad_title" value
 * @method string  getAdTarget()            Returns the current record's "ad_target" value
 * @method integer getDisplayCount()        Returns the current record's "display_count" value
 * @method integer getTotalDisplayCount()   Returns the current record's "total_display_count" value
 * @method boolean getIsArchive()           Returns the current record's "is_archive" value
 * @method SbtAds  setId()                  Sets the current record's "id" value
 * @method SbtAds  setAdPosition()          Sets the current record's "ad_position" value
 * @method SbtAds  setAdName()              Sets the current record's "ad_name" value
 * @method SbtAds  setAdType()              Sets the current record's "ad_type" value
 * @method SbtAds  setIsEnabled()           Sets the current record's "is_enabled" value
 * @method SbtAds  setCcounterId()          Sets the current record's "ccounter_id" value
 * @method SbtAds  setPriority()            Sets the current record's "priority" value
 * @method SbtAds  setAdTitle()             Sets the current record's "ad_title" value
 * @method SbtAds  setAdTarget()            Sets the current record's "ad_target" value
 * @method SbtAds  setDisplayCount()        Sets the current record's "display_count" value
 * @method SbtAds  setTotalDisplayCount()   Sets the current record's "total_display_count" value
 * @method SbtAds  setIsArchive()           Sets the current record's "is_archive" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSbtAds extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sbt_ads');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('ad_position', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'top_mid',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('ad_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('ad_type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'img',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_enabled', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'N',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('ccounter_id', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('priority', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '10',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ad_title', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('ad_target', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'N',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('display_count', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('total_display_count', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_archive', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}