<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SbtAnalysis', 'doctrine');

/**
 * BaseSbtAnalysis
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $author_id
 * @property integer $analysis_category_id
 * @property integer $analysis_type_id
 * @property integer $analysis_object_id
 * @property integer $analysis_market_id
 * @property integer $analysis_stocklist_id
 * @property integer $analysis_sector_id
 * @property string $analysis_title
 * @property string $image
 * @property string $image_text
 * @property string $analysis_description
 * @property integer $analysis_votes
 * @property integer $analysis_views
 * @property integer $analysis_medal_achived
 * @property integer $published
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property sfGuardUser $sfGuardUser
 * @property SbtArticleCategory $SbtArticleCategory
 * @property SbtArticleType $SbtArticleType
 * @property SbtObject $SbtObject
 * @property SbtAnalysisStatus $SbtAnalysisStatus
 * 
 * @method integer            getId()                     Returns the current record's "id" value
 * @method integer            getAuthorId()               Returns the current record's "author_id" value
 * @method integer            getAnalysisCategoryId()     Returns the current record's "analysis_category_id" value
 * @method integer            getAnalysisTypeId()         Returns the current record's "analysis_type_id" value
 * @method integer            getAnalysisObjectId()       Returns the current record's "analysis_object_id" value
 * @method integer            getAnalysisMarketId()       Returns the current record's "analysis_market_id" value
 * @method integer            getAnalysisStocklistId()    Returns the current record's "analysis_stocklist_id" value
 * @method integer            getAnalysisSectorId()       Returns the current record's "analysis_sector_id" value
 * @method string             getAnalysisTitle()          Returns the current record's "analysis_title" value
 * @method string             getImage()                  Returns the current record's "image" value
 * @method string             getImageText()              Returns the current record's "image_text" value
 * @method string             getAnalysisDescription()    Returns the current record's "analysis_description" value
 * @method integer            getAnalysisVotes()          Returns the current record's "analysis_votes" value
 * @method integer            getAnalysisViews()          Returns the current record's "analysis_views" value
 * @method integer            getAnalysisMedalAchived()   Returns the current record's "analysis_medal_achived" value
 * @method integer            getPublished()              Returns the current record's "published" value
 * @method timestamp          getCreatedAt()              Returns the current record's "created_at" value
 * @method timestamp          getUpdatedAt()              Returns the current record's "updated_at" value
 * @method sfGuardUser        getSfGuardUser()            Returns the current record's "sfGuardUser" value
 * @method SbtArticleCategory getSbtArticleCategory()     Returns the current record's "SbtArticleCategory" value
 * @method SbtArticleType     getSbtArticleType()         Returns the current record's "SbtArticleType" value
 * @method SbtObject          getSbtObject()              Returns the current record's "SbtObject" value
 * @method SbtAnalysisStatus  getSbtAnalysisStatus()      Returns the current record's "SbtAnalysisStatus" value
 * @method SbtAnalysis        setId()                     Sets the current record's "id" value
 * @method SbtAnalysis        setAuthorId()               Sets the current record's "author_id" value
 * @method SbtAnalysis        setAnalysisCategoryId()     Sets the current record's "analysis_category_id" value
 * @method SbtAnalysis        setAnalysisTypeId()         Sets the current record's "analysis_type_id" value
 * @method SbtAnalysis        setAnalysisObjectId()       Sets the current record's "analysis_object_id" value
 * @method SbtAnalysis        setAnalysisMarketId()       Sets the current record's "analysis_market_id" value
 * @method SbtAnalysis        setAnalysisStocklistId()    Sets the current record's "analysis_stocklist_id" value
 * @method SbtAnalysis        setAnalysisSectorId()       Sets the current record's "analysis_sector_id" value
 * @method SbtAnalysis        setAnalysisTitle()          Sets the current record's "analysis_title" value
 * @method SbtAnalysis        setImage()                  Sets the current record's "image" value
 * @method SbtAnalysis        setImageText()              Sets the current record's "image_text" value
 * @method SbtAnalysis        setAnalysisDescription()    Sets the current record's "analysis_description" value
 * @method SbtAnalysis        setAnalysisVotes()          Sets the current record's "analysis_votes" value
 * @method SbtAnalysis        setAnalysisViews()          Sets the current record's "analysis_views" value
 * @method SbtAnalysis        setAnalysisMedalAchived()   Sets the current record's "analysis_medal_achived" value
 * @method SbtAnalysis        setPublished()              Sets the current record's "published" value
 * @method SbtAnalysis        setCreatedAt()              Sets the current record's "created_at" value
 * @method SbtAnalysis        setUpdatedAt()              Sets the current record's "updated_at" value
 * @method SbtAnalysis        setSfGuardUser()            Sets the current record's "sfGuardUser" value
 * @method SbtAnalysis        setSbtArticleCategory()     Sets the current record's "SbtArticleCategory" value
 * @method SbtAnalysis        setSbtArticleType()         Sets the current record's "SbtArticleType" value
 * @method SbtAnalysis        setSbtObject()              Sets the current record's "SbtObject" value
 * @method SbtAnalysis        setSbtAnalysisStatus()      Sets the current record's "SbtAnalysisStatus" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSbtAnalysis extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sbt_analysis');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('author_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('analysis_category_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('analysis_type_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('analysis_object_id', 'integer', 3, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('analysis_market_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('analysis_stocklist_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('analysis_sector_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('analysis_title', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('image', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('image_text', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('analysis_description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('analysis_votes', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('analysis_views', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('analysis_medal_achived', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('published', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $this->hasOne('SbtArticleCategory', array(
             'local' => 'analysis_category_id',
             'foreign' => 'id'));

        $this->hasOne('SbtArticleType', array(
             'local' => 'analysis_type_id',
             'foreign' => 'id'));

        $this->hasOne('SbtObject', array(
             'local' => 'analysis_object_id',
             'foreign' => 'id'));

        $this->hasOne('SbtAnalysisStatus', array(
             'local' => 'published',
             'foreign' => 'id'));
    }
}