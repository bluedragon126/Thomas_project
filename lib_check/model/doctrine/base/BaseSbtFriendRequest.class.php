<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SbtFriendRequest', 'doctrine');

/**
 * BaseSbtFriendRequest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $contactor_id
 * @property integer $contactee_id
 * @property string $message
 * @property integer $status
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * 
 * @method integer          getId()           Returns the current record's "id" value
 * @method integer          getContactorId()  Returns the current record's "contactor_id" value
 * @method integer          getContacteeId()  Returns the current record's "contactee_id" value
 * @method string           getMessage()      Returns the current record's "message" value
 * @method integer          getStatus()       Returns the current record's "status" value
 * @method timestamp        getCreatedAt()    Returns the current record's "created_at" value
 * @method timestamp        getUpdatedAt()    Returns the current record's "updated_at" value
 * @method SbtFriendRequest setId()           Sets the current record's "id" value
 * @method SbtFriendRequest setContactorId()  Sets the current record's "contactor_id" value
 * @method SbtFriendRequest setContacteeId()  Sets the current record's "contactee_id" value
 * @method SbtFriendRequest setMessage()      Sets the current record's "message" value
 * @method SbtFriendRequest setStatus()       Sets the current record's "status" value
 * @method SbtFriendRequest setCreatedAt()    Sets the current record's "created_at" value
 * @method SbtFriendRequest setUpdatedAt()    Sets the current record's "updated_at" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSbtFriendRequest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sbt_friend_request');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('contactor_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('contactee_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('message', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}