<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Authors', 'doctrine');

/**
 * BaseAuthors
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $name
 * @property string $code
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer     getId()          Returns the current record's "id" value
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method string      getName()        Returns the current record's "name" value
 * @method string      getCode()        Returns the current record's "code" value
 * @method sfGuardUser getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method Authors     setId()          Sets the current record's "id" value
 * @method Authors     setUserId()      Sets the current record's "user_id" value
 * @method Authors     setName()        Sets the current record's "name" value
 * @method Authors     setCode()        Sets the current record's "code" value
 * @method Authors     setSfGuardUser() Sets the current record's "sfGuardUser" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAuthors extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('authors');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('code', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}