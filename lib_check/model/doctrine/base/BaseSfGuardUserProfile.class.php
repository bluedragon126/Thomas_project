<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SfGuardUserProfile', 'doctrine');

/**
 * BaseSfGuardUserProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $kundnr
 * @property integer $abonid
 * @property integer $userstatid
 * @property string $priv
 * @property integer $year_of_birth
 * @property integer $gender
 * @property string $username
 * @property string $firstname
 * @property string $lastname
 * @property string $co
 * @property string $street
 * @property string $zipcode
 * @property string $city
 * @property integer $land
 * @property string $email
 * @property string $phone
 * @property string $signature
 * @property timestamp $regdate
 * @property date $stopdate
 * @property date $betdate
 * @property integer $inlog
 * @property timestamp $inlogdate
 * @property integer $activity_cnt
 * @property integer $from_sbt
 * @property integer $sbt_active
 * @property integer $sbt_activation_code
 * @property integer $hide_profile
 * @property string $usernamealias
 * @property integer $use_alias
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $SbtMessages
 * @property Abon $Abon
 * @property UserStatus $UserStatus
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method string              getKundnr()              Returns the current record's "kundnr" value
 * @method integer             getAbonid()              Returns the current record's "abonid" value
 * @method integer             getUserstatid()          Returns the current record's "userstatid" value
 * @method string              getPriv()                Returns the current record's "priv" value
 * @method integer             getYearOfBirth()         Returns the current record's "year_of_birth" value
 * @method integer             getGender()              Returns the current record's "gender" value
 * @method string              getUsername()            Returns the current record's "username" value
 * @method string              getFirstname()           Returns the current record's "firstname" value
 * @method string              getLastname()            Returns the current record's "lastname" value
 * @method string              getCo()                  Returns the current record's "co" value
 * @method string              getStreet()              Returns the current record's "street" value
 * @method string              getZipcode()             Returns the current record's "zipcode" value
 * @method string              getCity()                Returns the current record's "city" value
 * @method integer             getLand()                Returns the current record's "land" value
 * @method string              getEmail()               Returns the current record's "email" value
 * @method string              getPhone()               Returns the current record's "phone" value
 * @method string              getSignature()           Returns the current record's "signature" value
 * @method timestamp           getRegdate()             Returns the current record's "regdate" value
 * @method date                getStopdate()            Returns the current record's "stopdate" value
 * @method date                getBetdate()             Returns the current record's "betdate" value
 * @method integer             getInlog()               Returns the current record's "inlog" value
 * @method timestamp           getInlogdate()           Returns the current record's "inlogdate" value
 * @method integer             getActivityCnt()         Returns the current record's "activity_cnt" value
 * @method integer             getFromSbt()             Returns the current record's "from_sbt" value
 * @method integer             getSbtActive()           Returns the current record's "sbt_active" value
 * @method integer             getSbtActivationCode()   Returns the current record's "sbt_activation_code" value
 * @method integer             getHideProfile()         Returns the current record's "hide_profile" value
 * @method string              getUsernamealias()       Returns the current record's "usernamealias" value
 * @method integer             getUseAlias()            Returns the current record's "use_alias" value
 * @method sfGuardUser         getSfGuardUser()         Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getSbtMessages()         Returns the current record's "SbtMessages" collection
 * @method Abon                getAbon()                Returns the current record's "Abon" value
 * @method UserStatus          getUserStatus()          Returns the current record's "UserStatus" value
 * @method SfGuardUserProfile  setId()                  Sets the current record's "id" value
 * @method SfGuardUserProfile  setUserId()              Sets the current record's "user_id" value
 * @method SfGuardUserProfile  setKundnr()              Sets the current record's "kundnr" value
 * @method SfGuardUserProfile  setAbonid()              Sets the current record's "abonid" value
 * @method SfGuardUserProfile  setUserstatid()          Sets the current record's "userstatid" value
 * @method SfGuardUserProfile  setPriv()                Sets the current record's "priv" value
 * @method SfGuardUserProfile  setYearOfBirth()         Sets the current record's "year_of_birth" value
 * @method SfGuardUserProfile  setGender()              Sets the current record's "gender" value
 * @method SfGuardUserProfile  setUsername()            Sets the current record's "username" value
 * @method SfGuardUserProfile  setFirstname()           Sets the current record's "firstname" value
 * @method SfGuardUserProfile  setLastname()            Sets the current record's "lastname" value
 * @method SfGuardUserProfile  setCo()                  Sets the current record's "co" value
 * @method SfGuardUserProfile  setStreet()              Sets the current record's "street" value
 * @method SfGuardUserProfile  setZipcode()             Sets the current record's "zipcode" value
 * @method SfGuardUserProfile  setCity()                Sets the current record's "city" value
 * @method SfGuardUserProfile  setLand()                Sets the current record's "land" value
 * @method SfGuardUserProfile  setEmail()               Sets the current record's "email" value
 * @method SfGuardUserProfile  setPhone()               Sets the current record's "phone" value
 * @method SfGuardUserProfile  setSignature()           Sets the current record's "signature" value
 * @method SfGuardUserProfile  setRegdate()             Sets the current record's "regdate" value
 * @method SfGuardUserProfile  setStopdate()            Sets the current record's "stopdate" value
 * @method SfGuardUserProfile  setBetdate()             Sets the current record's "betdate" value
 * @method SfGuardUserProfile  setInlog()               Sets the current record's "inlog" value
 * @method SfGuardUserProfile  setInlogdate()           Sets the current record's "inlogdate" value
 * @method SfGuardUserProfile  setActivityCnt()         Sets the current record's "activity_cnt" value
 * @method SfGuardUserProfile  setFromSbt()             Sets the current record's "from_sbt" value
 * @method SfGuardUserProfile  setSbtActive()           Sets the current record's "sbt_active" value
 * @method SfGuardUserProfile  setSbtActivationCode()   Sets the current record's "sbt_activation_code" value
 * @method SfGuardUserProfile  setHideProfile()         Sets the current record's "hide_profile" value
 * @method SfGuardUserProfile  setUsernamealias()       Sets the current record's "usernamealias" value
 * @method SfGuardUserProfile  setUseAlias()            Sets the current record's "use_alias" value
 * @method SfGuardUserProfile  setSfGuardUser()         Sets the current record's "sfGuardUser" value
 * @method SfGuardUserProfile  setSbtMessages()         Sets the current record's "SbtMessages" collection
 * @method SfGuardUserProfile  setAbon()                Sets the current record's "Abon" value
 * @method SfGuardUserProfile  setUserStatus()          Sets the current record's "UserStatus" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSfGuardUserProfile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user_profile');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('kundnr', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('abonid', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('userstatid', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('priv', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('year_of_birth', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('gender', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('firstname', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('lastname', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('co', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('street', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('zipcode', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('city', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('land', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('email', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('phone', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('signature', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('regdate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('stopdate', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('betdate', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('inlog', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('inlogdate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('activity_cnt', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('from_sbt', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('sbt_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('sbt_activation_code', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('hide_profile', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('usernamealias', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('use_alias', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('SbtMessages', array(
             'local' => 'user_id',
             'foreign' => 'message_to'));

        $this->hasOne('Abon', array(
             'local' => 'abonid',
             'foreign' => 'abonid'));

        $this->hasOne('UserStatus', array(
             'local' => 'userstatid',
             'foreign' => 'userstatid'));
    }
}