<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Btforum', 'doctrine');

/**
 * BaseBtforum
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $author_id
 * @property string $skapare
 * @property string $rubrik
 * @property string $textarea
 * @property timestamp $datum
 * @property timestamp $andratdatum
 * @property integer $visningar
 * @property integer $ant_inlagg
 * @property string $amne
 * @property string $koppling
 * @property integer $btforum_category_id
 * @property integer $btforum_subcategory_id
 * @property BtforumCategory $BtforumCategory
 * @property BtforumSubcategory $BtforumSubcategory
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer            getId()                     Returns the current record's "id" value
 * @method integer            getAuthorId()               Returns the current record's "author_id" value
 * @method string             getSkapare()                Returns the current record's "skapare" value
 * @method string             getRubrik()                 Returns the current record's "rubrik" value
 * @method string             getTextarea()               Returns the current record's "textarea" value
 * @method timestamp          getDatum()                  Returns the current record's "datum" value
 * @method timestamp          getAndratdatum()            Returns the current record's "andratdatum" value
 * @method integer            getVisningar()              Returns the current record's "visningar" value
 * @method integer            getAntInlagg()              Returns the current record's "ant_inlagg" value
 * @method string             getAmne()                   Returns the current record's "amne" value
 * @method string             getKoppling()               Returns the current record's "koppling" value
 * @method integer            getBtforumCategoryId()      Returns the current record's "btforum_category_id" value
 * @method integer            getBtforumSubcategoryId()   Returns the current record's "btforum_subcategory_id" value
 * @method BtforumCategory    getBtforumCategory()        Returns the current record's "BtforumCategory" value
 * @method BtforumSubcategory getBtforumSubcategory()     Returns the current record's "BtforumSubcategory" value
 * @method sfGuardUser        getSfGuardUser()            Returns the current record's "sfGuardUser" value
 * @method Btforum            setId()                     Sets the current record's "id" value
 * @method Btforum            setAuthorId()               Sets the current record's "author_id" value
 * @method Btforum            setSkapare()                Sets the current record's "skapare" value
 * @method Btforum            setRubrik()                 Sets the current record's "rubrik" value
 * @method Btforum            setTextarea()               Sets the current record's "textarea" value
 * @method Btforum            setDatum()                  Sets the current record's "datum" value
 * @method Btforum            setAndratdatum()            Sets the current record's "andratdatum" value
 * @method Btforum            setVisningar()              Sets the current record's "visningar" value
 * @method Btforum            setAntInlagg()              Sets the current record's "ant_inlagg" value
 * @method Btforum            setAmne()                   Sets the current record's "amne" value
 * @method Btforum            setKoppling()               Sets the current record's "koppling" value
 * @method Btforum            setBtforumCategoryId()      Sets the current record's "btforum_category_id" value
 * @method Btforum            setBtforumSubcategoryId()   Sets the current record's "btforum_subcategory_id" value
 * @method Btforum            setBtforumCategory()        Sets the current record's "BtforumCategory" value
 * @method Btforum            setBtforumSubcategory()     Sets the current record's "BtforumSubcategory" value
 * @method Btforum            setSfGuardUser()            Sets the current record's "sfGuardUser" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBtforum extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('btforum');
        $this->hasColumn('id', 'integer', 3, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 3,
             ));
        $this->hasColumn('author_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('skapare', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('rubrik', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('textarea', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('datum', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('andratdatum', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('visningar', 'integer', 3, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('ant_inlagg', 'integer', 3, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('amne', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('koppling', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('btforum_category_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('btforum_subcategory_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BtforumCategory', array(
             'local' => 'btforum_category_id',
             'foreign' => 'id'));

        $this->hasOne('BtforumSubcategory', array(
             'local' => 'btforum_subcategory_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'author_id',
             'foreign' => 'id'));
    }
}