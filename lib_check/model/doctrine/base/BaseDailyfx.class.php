<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Dailyfx', 'doctrine');

/**
 * BaseDailyfx
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $ad_date
 * @property string $ad_time
 * @property string $ad_currency
 * @property string $ad_description
 * @property string $ad_importance
 * @property string $ad_actual
 * @property string $ad_forecast
 * @property string $ad_previous
 * @property timestamp $ad_tmstamp
 * @property string $ad_tmzone
 * 
 * @method integer   getId()             Returns the current record's "id" value
 * @method string    getAdDate()         Returns the current record's "ad_date" value
 * @method string    getAdTime()         Returns the current record's "ad_time" value
 * @method string    getAdCurrency()     Returns the current record's "ad_currency" value
 * @method string    getAdDescription()  Returns the current record's "ad_description" value
 * @method string    getAdImportance()   Returns the current record's "ad_importance" value
 * @method string    getAdActual()       Returns the current record's "ad_actual" value
 * @method string    getAdForecast()     Returns the current record's "ad_forecast" value
 * @method string    getAdPrevious()     Returns the current record's "ad_previous" value
 * @method timestamp getAdTmstamp()      Returns the current record's "ad_tmstamp" value
 * @method string    getAdTmzone()       Returns the current record's "ad_tmzone" value
 * @method Dailyfx   setId()             Sets the current record's "id" value
 * @method Dailyfx   setAdDate()         Sets the current record's "ad_date" value
 * @method Dailyfx   setAdTime()         Sets the current record's "ad_time" value
 * @method Dailyfx   setAdCurrency()     Sets the current record's "ad_currency" value
 * @method Dailyfx   setAdDescription()  Sets the current record's "ad_description" value
 * @method Dailyfx   setAdImportance()   Sets the current record's "ad_importance" value
 * @method Dailyfx   setAdActual()       Sets the current record's "ad_actual" value
 * @method Dailyfx   setAdForecast()     Sets the current record's "ad_forecast" value
 * @method Dailyfx   setAdPrevious()     Sets the current record's "ad_previous" value
 * @method Dailyfx   setAdTmstamp()      Sets the current record's "ad_tmstamp" value
 * @method Dailyfx   setAdTmzone()       Sets the current record's "ad_tmzone" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDailyfx extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dailyfx');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ad_date', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('ad_time', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('ad_currency', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('ad_description', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('ad_importance', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('ad_actual', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('ad_forecast', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('ad_previous', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('ad_tmstamp', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('ad_tmzone', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}