<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ArticleTemplate', 'doctrine');

/**
 * BaseArticleTemplate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $template_id
 * @property string $template_name
 * @property integer $author_id
 * @property timestamp $article_date
 * @property integer $category_id
 * @property integer $type_id
 * @property integer $object_id
 * @property string $title
 * @property string $listheader
 * @property string $image
 * @property string $image_text
 * @property string $text
 * @property string $author
 * @property integer $art_statid
 * 
 * @method integer         getTemplateId()    Returns the current record's "template_id" value
 * @method string          getTemplateName()  Returns the current record's "template_name" value
 * @method integer         getAuthorId()      Returns the current record's "author_id" value
 * @method timestamp       getArticleDate()   Returns the current record's "article_date" value
 * @method integer         getCategoryId()    Returns the current record's "category_id" value
 * @method integer         getTypeId()        Returns the current record's "type_id" value
 * @method integer         getObjectId()      Returns the current record's "object_id" value
 * @method string          getTitle()         Returns the current record's "title" value
 * @method string          getListheader()    Returns the current record's "listheader" value
 * @method string          getImage()         Returns the current record's "image" value
 * @method string          getImageText()     Returns the current record's "image_text" value
 * @method string          getText()          Returns the current record's "text" value
 * @method string          getAuthor()        Returns the current record's "author" value
 * @method integer         getArtStatid()     Returns the current record's "art_statid" value
 * @method ArticleTemplate setTemplateId()    Sets the current record's "template_id" value
 * @method ArticleTemplate setTemplateName()  Sets the current record's "template_name" value
 * @method ArticleTemplate setAuthorId()      Sets the current record's "author_id" value
 * @method ArticleTemplate setArticleDate()   Sets the current record's "article_date" value
 * @method ArticleTemplate setCategoryId()    Sets the current record's "category_id" value
 * @method ArticleTemplate setTypeId()        Sets the current record's "type_id" value
 * @method ArticleTemplate setObjectId()      Sets the current record's "object_id" value
 * @method ArticleTemplate setTitle()         Sets the current record's "title" value
 * @method ArticleTemplate setListheader()    Sets the current record's "listheader" value
 * @method ArticleTemplate setImage()         Sets the current record's "image" value
 * @method ArticleTemplate setImageText()     Sets the current record's "image_text" value
 * @method ArticleTemplate setText()          Sets the current record's "text" value
 * @method ArticleTemplate setAuthor()        Sets the current record's "author" value
 * @method ArticleTemplate setArtStatid()     Sets the current record's "art_statid" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticleTemplate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article_template');
        $this->hasColumn('template_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('template_name', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('author_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('article_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('category_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('type_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('object_id', 'integer', 3, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('listheader', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('image', 'string', 90, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 90,
             ));
        $this->hasColumn('image_text', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('text', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('author', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('art_statid', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}