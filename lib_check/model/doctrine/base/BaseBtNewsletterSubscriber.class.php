<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BtNewsletterSubscriber', 'doctrine');

/**
 * BaseBtNewsletterSubscriber
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $email
 * @property integer $newsletter_type_id
 * @property integer $is_subscribed
 * @property integer $sbt_activation_code
 * 
 * @method integer                getId()                 Returns the current record's "id" value
 * @method integer                getUserId()             Returns the current record's "user_id" value
 * @method string                 getEmail()              Returns the current record's "email" value
 * @method integer                getNewsletterTypeId()   Returns the current record's "newsletter_type_id" value
 * @method integer                getIsSubscribed()       Returns the current record's "is_subscribed" value
 * @method integer                getSbtActivationCode()   Returns the current record's "sbt_activation_code" value
 * @method BtNewsletterSubscriber setId()                 Sets the current record's "id" value
 * @method BtNewsletterSubscriber setUserId()             Sets the current record's "user_id" value
 * @method BtNewsletterSubscriber setEmail()              Sets the current record's "email" value
 * @method BtNewsletterSubscriber setNewsletterTypeId()   Sets the current record's "newsletter_type_id" value
 * @method BtNewsletterSubscriber setIsSubscribed()       Sets the current record's "is_subscribed" value
 * @method BtNewsletterSubscriber setSbtActivationCode()   Sets the current record's "sbt_activation_code" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBtNewsletterSubscriber extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bt_newsletter_subscriber');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('email', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('newsletter_type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_subscribed', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('sbt_activation_code', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}