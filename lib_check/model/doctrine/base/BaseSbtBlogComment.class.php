<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SbtBlogComment', 'doctrine');

/**
 * BaseSbtBlogComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $blog_id
 * @property string $blog_comment
 * @property integer $comment_by
 * @property integer $followup_by_mail
 * @property timestamp $created_at
 * @property SbtUserBlog $SbtUserBlog
 * 
 * @method integer        getId()               Returns the current record's "id" value
 * @method integer        getBlogId()           Returns the current record's "blog_id" value
 * @method string         getBlogComment()      Returns the current record's "blog_comment" value
 * @method integer        getCommentBy()        Returns the current record's "comment_by" value
 * @method integer        getFollowupByMail()   Returns the current record's "followup_by_mail" value
 * @method timestamp      getCreatedAt()        Returns the current record's "created_at" value
 * @method SbtUserBlog    getSbtUserBlog()      Returns the current record's "SbtUserBlog" value
 * @method SbtBlogComment setId()               Sets the current record's "id" value
 * @method SbtBlogComment setBlogId()           Sets the current record's "blog_id" value
 * @method SbtBlogComment setBlogComment()      Sets the current record's "blog_comment" value
 * @method SbtBlogComment setCommentBy()        Sets the current record's "comment_by" value
 * @method SbtBlogComment setFollowupByMail()   Sets the current record's "followup_by_mail" value
 * @method SbtBlogComment setCreatedAt()        Sets the current record's "created_at" value
 * @method SbtBlogComment setSbtUserBlog()      Sets the current record's "SbtUserBlog" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSbtBlogComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sbt_blog_comment');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('blog_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('blog_comment', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('comment_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('followup_by_mail', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SbtUserBlog', array(
             'local' => 'blog_id',
             'foreign' => 'id'));
    }
}