<?php

/**
 * BtShopArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class BtShopArticle extends BaseBtShopArticle {
    /*
     *
     * This function checks weither specific attributes are set or not.
     *
     */

    public function checkAttribute() {
        if (!sfContext::getInstance()->getUser()->hasAttribute('product_arr')) {
            $product_arr = array();
            sfContext::getInstance()->getUser()->setAttribute('product_arr', $product_arr);
        }

        if (!sfContext::getInstance()->getUser()->hasAttribute('price_arr')) {
            $price_arr = array();
            sfContext::getInstance()->getUser()->setAttribute('price_arr', $price_arr);
        }

        if (!sfContext::getInstance()->getUser()->hasAttribute('product_qty_arr')) {
            $product_qty_arr = array();
            sfContext::getInstance()->getUser()->setAttribute('product_qty_arr', $product_qty_arr);
        }
    }

    /*
     *
     * This function return a perticular article.
     *
     */

    public function getPerticularShopArticle($id) {
        $query = Doctrine_Query::create()->from('BtShopArticle bsa');
        $query = $query->where('bsa.id = ?', $id);
        $data = $query->fetchOne();
        return $data;
    }

    /*
     *
     * This function return a perticular article.
     *
     */

    public function deletePerticularShopArticle($id) {
        $data = $this->getPerticularShopArticle($id);
        if ($data)
            $data->delete();
    }

    /*
     *
     * This function return a perticular article name.
     *
     */

    public function getProductName($id, $btChartTypeId = 0) {
        $query = Doctrine_Query::create()
                ->select('bsa.btshop_article_title as title')
                ->from('BtShopArticle bsa')
                ->where('bsa.id = ?', $id);

        $data = $query->fetchArray();
        if ($btChartTypeId != 0) {
            $chartName = Doctrine::getTable('BtchartType')->find($btChartTypeId)->chart_type_name;
            if ($data[0]['title'] != $chartName) {
                $data[0]['title'] = $data[0]['title'] . '-' . $chartName;
            }
        }

        return $data;
    }

    /*
     *
     * This function artices of specific type.
     *
     */

    public function getShopArticleOfType($type) {
        $query = Doctrine_Query::create()->from('BtShopArticle bsa');
        $query = $query->where('bsa.btshop_type_id = ?', $type);
        $data = $query->execute();
        return $data;
    }

    /*
     *
     * This function artices of specific type.
     *
     */

    public function getShopArticleOfTypePublic($type) {
        $query = Doctrine_Query::create()->from('BtShopArticle bsa');
        $query = $query->where('bsa.btshop_type_id = ?', $type);
        $query = $query->where('bsa.published = ?', 1);
        $data = $query->execute();
        return $data;
    }
    
    /*
     *
     * This function published artices of specific type.
     *
     */

    public function getPublishedShopArticleOfType($type) {
        $query = Doctrine_Query::create()->from('BtShopArticle bsa');
        $query = $query->where('bsa.btshop_type_id = ? AND bsa.published = ?', array($type, 1));
        $data = $query->execute();
        return $data;
    }

    /*
     *
     * This function specific detail of specific article.
     *
     */

    public function getShopArticleSpecificDetails($id) {
        $query = Doctrine_Query::create()->select('btshop_type_id as p_type, btshop_article_title as p_title')->from('BtShopArticle bsa');
        $query = $query->where('bsa.id = ?', $id);
        $data = $query->fetchArray();
        return $data;
    }

    /*
     *
     * This function searches for least price of a perticualr product.
     *
     */

    public function getLeastPriceOfProduct($id) {
        $query = Doctrine_Query::create()->from('BtShopPriceDetails bspd')->where('bspd.btshop_article_id = ? ', $id);
        $query = $query->orderBy('bspd.btshop_product_price ASC');
        $data = $query->fetchOne();

        return $data->btshop_product_price;
    }

    /*
     *
     * This function searches for least price of a perticualr product.
     *
     */

    public function getLeastPriceOfProductId($id) {
        $query = Doctrine_Query::create()->from('BtShopPriceDetails bspd')->where('bspd.btshop_article_id = ? ', $id);
        $query = $query->orderBy('bspd.btshop_product_price ASC');
        $data = $query->fetchOne();

        return $data->id;
    }

    /*
     *
     * This function return type name.
     *
     */

    public function getShopArticleTypeName($type_id) {
        $query = Doctrine_Query::create()->from('BtShopArticleType bsat');
        $query = $query->where('bsat.id = ?', $type_id);
        $data = $query->fetchOne();
        return ucfirst($data->btshop_type_name);
    }

    /*
     *
     * This function searches for least price of a perticualr product.
     *
     */

    public function getProductPriceList($id) {
        $query = Doctrine_Query::create()->from('BtShopPriceDetails bspd')->where('bspd.btshop_article_id = ? ', $id);
        $query = $query->orderBy('bspd.btshop_product_price ASC');
        $data = $query->execute();

        return $data;
    }

    /*
     *
     * This function returns group of articles.
     *
     */

    public function getProductInOrder($arr) {
        $comma_separated_id = $for_id = implode(",", $arr);

        if (strstr($comma_separated_id, ','))
            $comma_separated_id = str_replace(',', "','", $comma_separated_id);
        else
            $comma_separated_id = $comma_separated_id;


        if ($comma_separated_id) {
            $query_str = "SELECT btshop_product_image, is_sellable as p_sellable, id as p_id, btshop_type_id as p_type, btshop_article_title as p_title, btchart_type_id as chart_type FROM btshop_article WHERE id IN ('" . $comma_separated_id . "') ORDER BY FIELD(id, " . $for_id . ")";
            //echo $query_str; die;
            $q = Doctrine_Manager::getInstance()->getCurrentConnection();
            $stmt = $q->prepare($query_str);
            $stmt->execute();
            $data = $stmt->fetchAll(PDO::FETCH_ASSOC);
            //$data = $stmt->fetchAll(PDO::FETCH_NUM);
        }

        return $data;
    }

    /*
     *
     * This function updates the shop article status.
     *
     */

    public function updateShopArticleStatus($arr) {
        foreach ($arr['shop_art_ids'] as $key => $value) {
            $record = $this->getPerticularShopArticle($value);
            $record->published = $arr["shop_art_status"][$key];
            $record->save();
        }
    }

    /*
     *
     * This function returns shipping cost.
     *
     */

    public function getTotalProductWeight($arr, $product_qty_arr) {
        $comma_separated_id = $for_id = implode(",", $arr);
        $total_weight = $i = 0;
        if (strstr($comma_separated_id, ','))
            $comma_separated_id = str_replace(',', "','", $comma_separated_id);
        else
            $comma_separated_id = $comma_separated_id;

        if ($comma_separated_id) {
            $query_str = "SELECT product_weight as p_weight, btshop_type_id as p_type FROM btshop_article WHERE id IN ('" . $comma_separated_id . "') ORDER BY FIELD(id, " . $for_id . ")";

            $q = Doctrine_Manager::getInstance()->getCurrentConnection();
            $stmt = $q->prepare($query_str);
            $stmt->execute();
            $products_data = $stmt->fetchAll(PDO::FETCH_ASSOC);

            foreach ($products_data as $data) {
                if ($data['p_type'] < 5) {
                    $weight = $product_qty_arr[$i] * $data['p_weight'];
                    $total_weight = $total_weight + $weight;
                }
                $i++;
            }
        }

        return $total_weight;
    }

    public function getChartCombosInformation($article_id) {
        $q = Doctrine_Query::create()
                ->from('BtShopArticle bts')
                ->where('bts.id = ? ', $article_id)
                ->andWhere('bts.btshop_type_id = 7')
                ->fetchOne();
        return $q->btchart_type_id;
    }

    public function getAllShopArticleTitle() {
        $q = Doctrine_Query::create()
                ->select('bts.id, bts.btshop_article_title')
                ->from('BtShopArticle bts')
                ->execute();
        $article_title_arr = array();
        foreach ($q as $data) {
            $article_title_arr[$data->id] = $data->btshop_article_title;
        }
        return $article_title_arr;
    }
    
    public function getAllShopArticleTitleActive() {
        $q = Doctrine_Query::create()
                ->select('bts.id, bts.btshop_article_title')
                ->from('BtShopArticle bts')
                ->where('bts.btshop_type_id = ? AND bts.published = ?', array(6, 1))
                ->execute();
        $article_title_arr = array();
        foreach ($q as $data) {
            $article_title_arr[$data->id] = $data->btshop_article_title;
        }
        return $article_title_arr;
    }

      public function getAllShopArticleTitleFromSubscription() {
        $q = Doctrine_Query::create()
                ->select('bts.id, bts.btshop_article_title')
                ->from('BtShopArticle bts')
                ->where('bts.btshop_type_id = ? ', 6)
                ->execute();
        $article_title_arr = array();
        foreach ($q as $data) {
            $article_title_arr[$data->id] = $data->btshop_article_title;
        }
        return $article_title_arr;
    }
    /*
     *
     * This function published artices of specific type.
     *
     */

    public function getPublishedShopArticle() {
        $query = Doctrine_Query::create()->from('BtShopArticle bsa')->orderBy('RAND()')->limit(8)
        ->where('bsa.published = 1');
        $data = $query->execute();
        return $data;
    }
    
    /*
     *
     * This function published artices for article detail page.
     *
     */

    public function getPublishedShopArticleDetailPage() {
        $query = Doctrine_Query::create()->from('BtShopArticle bsa')->orderBy('RAND()')->limit(5)
        ->where('bsa.published = 1');
        $data = $query->execute();
        return $data;
    }

}