CREATE TABLE abon (abonid SMALLINT AUTO_INCREMENT, abon_name VARCHAR(10) NOT NULL, PRIMARY KEY(abonid)) ENGINE = INNODB;
CREATE TABLE ads (id INT AUTO_INCREMENT, ad_position VARCHAR(255) DEFAULT 'top_mid' NOT NULL, ad_name VARCHAR(255) NOT NULL, ad_type VARCHAR(255) DEFAULT 'img' NOT NULL, is_enabled VARCHAR(1) DEFAULT 'N' NOT NULL, ccounter_id VARCHAR(5) DEFAULT '0' NOT NULL, priority INT DEFAULT '10' NOT NULL, ad_title TEXT, ad_target VARCHAR(5) DEFAULT 'N' NOT NULL, display_count INT DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article (article_id INT AUTO_INCREMENT, author_id INT NOT NULL, article_date DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, category_id SMALLINT DEFAULT '0' NOT NULL, type_id SMALLINT DEFAULT '0' NOT NULL, object_id MEDIUMINT DEFAULT '0' NOT NULL, title VARCHAR(100) NOT NULL, listheader VARCHAR(50) NOT NULL, image VARCHAR(90) NOT NULL, image_text TEXT NOT NULL, text TEXT NOT NULL, author VARCHAR(30) NOT NULL, art_statid SMALLINT DEFAULT '1' NOT NULL, INDEX category_id_idx (category_id), INDEX type_id_idx (type_id), INDEX object_id_idx (object_id), INDEX art_statid_idx (art_statid), INDEX author_id_idx (author_id), PRIMARY KEY(article_id)) ENGINE = INNODB;
CREATE TABLE article_category (category_id SMALLINT AUTO_INCREMENT, category_name VARCHAR(20) NOT NULL, category_icon VARCHAR(15) NOT NULL, PRIMARY KEY(category_id)) ENGINE = INNODB;
CREATE TABLE article_count (id INT AUTO_INCREMENT, art_id INT NOT NULL, click_cnt INT NOT NULL, INDEX art_id_idx (art_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article_html (id INT AUTO_INCREMENT, article_id VARCHAR(100) NOT NULL, html_file_path VARCHAR(200) NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article_status (art_statid SMALLINT AUTO_INCREMENT, art_status VARCHAR(15) NOT NULL, PRIMARY KEY(art_statid)) ENGINE = INNODB;
CREATE TABLE article_template (template_id INT AUTO_INCREMENT, template_name VARCHAR(20) NOT NULL, author_id INT NOT NULL, article_date DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, category_id SMALLINT DEFAULT '0' NOT NULL, type_id SMALLINT DEFAULT '0' NOT NULL, object_id MEDIUMINT DEFAULT '0' NOT NULL, title VARCHAR(100) NOT NULL, listheader VARCHAR(50) NOT NULL, image VARCHAR(90) NOT NULL, image_text TEXT NOT NULL, text TEXT NOT NULL, author VARCHAR(30) NOT NULL, art_statid SMALLINT DEFAULT '1' NOT NULL, PRIMARY KEY(template_id)) ENGINE = INNODB;
CREATE TABLE article_type (type_id SMALLINT AUTO_INCREMENT, type_name VARCHAR(15) NOT NULL, PRIMARY KEY(type_id)) ENGINE = INNODB;
CREATE TABLE borst_article_comment (id INT AUTO_INCREMENT, article_comment TEXT NOT NULL, article_id INT DEFAULT '0' NOT NULL, comment_by INT DEFAULT '0' NOT NULL, created_at DATETIME, INDEX article_id_idx (article_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE bt_newsletter_subscriber (id INT AUTO_INCREMENT, user_id INT NOT NULL, email VARCHAR(128) NOT NULL, newsletter_type_id INT NOT NULL, is_subscribed TINYINT DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE bt_newsletter_type (id INT AUTO_INCREMENT, newsletter_name VARCHAR(200) DEFAULT '' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btshop_article (id INT AUTO_INCREMENT, btshop_article_author_id INT NOT NULL, btshop_type_id SMALLINT NOT NULL, btchart_type_id SMALLINT NOT NULL, btshop_article_title VARCHAR(200) DEFAULT '' NOT NULL, btshop_article_subtitle VARCHAR(200) DEFAULT '' NOT NULL, btshop_product_image VARCHAR(100) DEFAULT '' NOT NULL, btshop_product_intro_text TEXT NOT NULL, btshop_product_description TEXT NOT NULL, product_weight FLOAT(18, 2), published SMALLINT DEFAULT '0' NOT NULL, created_at DATETIME, INDEX btshop_type_id_idx (btshop_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btshop_article_type (id INT AUTO_INCREMENT, btshop_type_name VARCHAR(200) DEFAULT '' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btshop_price_details (id INT AUTO_INCREMENT, btshop_article_id INT NOT NULL, btshop_product_quantity INT NOT NULL, btshop_price_unit_id INT NOT NULL, btshop_product_price INT NOT NULL, btshop_product_text VARCHAR(200) DEFAULT '' NOT NULL, created_at DATETIME, INDEX btshop_article_id_idx (btshop_article_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btshop_price_qty_unit (id INT AUTO_INCREMENT, btshop_price_unit VARCHAR(200) DEFAULT '' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btchart_company_category (id INT AUTO_INCREMENT, company_type VARCHAR(100) NOT NULL, created_at DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, updated_at DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btchart_company_details (id INT AUTO_INCREMENT, company_type_id INT, company_name VARCHAR(100) NOT NULL, company_symbol VARCHAR(100) NOT NULL, country VARCHAR(100) NOT NULL, list VARCHAR(100) NOT NULL, sector VARCHAR(100) NOT NULL, active INT, default_chart SMALLINT NOT NULL, created_at DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, updated_at DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, INDEX company_type_id_idx (company_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btchart_favorite (id INT AUTO_INCREMENT, user_id INT NOT NULL, stock_id INT NOT NULL, stock_type INT NOT NULL, chart_type INT NOT NULL, description VARCHAR(200) NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btchart_type (id INT AUTO_INCREMENT, chart_type_category VARCHAR(100) NOT NULL, chart_type_name VARCHAR(100) NOT NULL, chart_type_text VARCHAR(100) NOT NULL, chart_type_short_name VARCHAR(100) NOT NULL, chart_type_image VARCHAR(100) NOT NULL, chart_type_file VARCHAR(100) NOT NULL, created_at DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, updated_at DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btforum (id MEDIUMINT AUTO_INCREMENT, author_id INT NOT NULL, skapare VARCHAR(50) NOT NULL, rubrik VARCHAR(50) NOT NULL, textarea TEXT NOT NULL, datum DATETIME NOT NULL, andratdatum DATETIME NOT NULL, visningar MEDIUMINT NOT NULL, ant_inlagg MEDIUMINT NOT NULL, amne VARCHAR(5) NOT NULL, koppling VARCHAR(5) NOT NULL, btforum_category_id INT NOT NULL, btforum_subcategory_id INT NOT NULL, INDEX btforum_category_id_idx (btforum_category_id), INDEX btforum_subcategory_id_idx (btforum_subcategory_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btforum_category (id INT AUTO_INCREMENT, btforum_category_name VARCHAR(200) NOT NULL, btforum_subcategory_id_list VARCHAR(200) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE btforum_subcategory (id INT AUTO_INCREMENT, btforum_subcategory_name VARCHAR(200) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE classroom (id MEDIUMINT AUTO_INCREMENT, creator VARCHAR(50) NOT NULL, title VARCHAR(50) NOT NULL, textarea TEXT NOT NULL, post_date VARCHAR(50) NOT NULL, other_dates VARCHAR(50) NOT NULL, views MEDIUMINT NOT NULL, reply_post MEDIUMINT NOT NULL, topic VARCHAR(5) NOT NULL, parent_id VARCHAR(5) NOT NULL, group_id VARCHAR(50) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE classroom_subscribtion (id INT AUTO_INCREMENT, user_id INT NOT NULL, group_id INT NOT NULL, topic_id INT NOT NULL, mail_subscribe TINYINT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contact_enquiry (id INT AUTO_INCREMENT, enq_type VARCHAR(20) NOT NULL, enq_subject VARCHAR(200), firstname VARCHAR(100) NOT NULL, lastname VARCHAR(100) NOT NULL, email VARCHAR(128) NOT NULL, user_question TEXT NOT NULL, comm_id INT NOT NULL, is_answered TINYINT DEFAULT '0' NOT NULL, enq_date DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contact_enquiry_post (id INT AUTO_INCREMENT, title VARCHAR(255), reply_text TEXT NOT NULL, enq_id INT NOT NULL, author_name VARCHAR(255), post_id INT, reply_date DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE countries (id INT AUTO_INCREMENT, iso_code VARCHAR(2) NOT NULL, country_name VARCHAR(80) NOT NULL, country_region_id INT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE country_region (id INT AUTO_INCREMENT, country_region_name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE country_shipping (id INT AUTO_INCREMENT, country_region_id INT NOT NULL, item_weight INT NOT NULL, price INT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE dailyfx (id INT, ad_date VARCHAR(128), ad_time VARCHAR(128), ad_currency VARCHAR(128), ad_description VARCHAR(128), ad_importance VARCHAR(128), ad_actual VARCHAR(128), ad_forecast VARCHAR(128), ad_previous VARCHAR(128), ad_tmstamp DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, ad_tmzone VARCHAR(128), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE moderatebatch (id INT AUTO_INCREMENT, currentcnt INT NOT NULL, currentmails VARCHAR(255) NOT NULL, start_time DATETIME NOT NULL, end_time DATETIME NOT NULL, process_status INT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE movies (id INT AUTO_INCREMENT, movie_title TEXT NOT NULL, movie_link TEXT NOT NULL, movie_desc TEXT NOT NULL, movie_status VARCHAR(20) NOT NULL, movie_display_count INT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE newsletter_account (id SMALLINT AUTO_INCREMENT, email VARCHAR(45) DEFAULT '' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE newsletter_public (id SMALLINT AUTO_INCREMENT, email VARCHAR(45) DEFAULT '' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE newsletter_sent (id INT AUTO_INCREMENT, date DATE DEFAULT '0000-00-00' NOT NULL, recipiants MEDIUMINT DEFAULT '0' NOT NULL, kundgrupp TINYINT DEFAULT '0' NOT NULL, subject VARCHAR(50) NOT NULL, body VARCHAR(60) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE objekt (object_id MEDIUMINT AUTO_INCREMENT, object_name VARCHAR(20) NOT NULL, object_date DATE DEFAULT '0000-00-00' NOT NULL, object_country VARCHAR(3) NOT NULL, object_logo VARCHAR(10) NOT NULL, PRIMARY KEY(object_id)) ENGINE = INNODB;
CREATE TABLE purchase (id INT AUTO_INCREMENT, user_id INT, email VARCHAR(200) DEFAULT '' NOT NULL, firstname VARCHAR(200) DEFAULT '' NOT NULL, lastname VARCHAR(200) DEFAULT '' NOT NULL, street VARCHAR(200) NOT NULL, zipcode INT, city VARCHAR(200) NOT NULL, telephone INT, country VARCHAR(200) NOT NULL, total_price FLOAT(18, 2), payment_method VARCHAR(200) NOT NULL, transaction_id VARCHAR(200) NOT NULL, response_code VARCHAR(20) NOT NULL, checkout_status INT, order_processed INT, created_at DATETIME, payment_date DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE purchased_item (id INT AUTO_INCREMENT, purchase_id INT, product_id INT, quantity INT, price_per_unit INT, product_text VARCHAR(200) DEFAULT '' NOT NULL, total_price FLOAT(18, 2), shipping FLOAT(18, 2), vat FLOAT(18, 2), created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_ads (id INT AUTO_INCREMENT, ad_position VARCHAR(255) DEFAULT 'top_mid' NOT NULL, ad_name VARCHAR(255) NOT NULL, ad_type VARCHAR(255) DEFAULT 'img' NOT NULL, is_enabled VARCHAR(1) DEFAULT 'N' NOT NULL, ccounter_id VARCHAR(5) DEFAULT '0' NOT NULL, priority INT DEFAULT '10' NOT NULL, ad_title TEXT, ad_target VARCHAR(5) DEFAULT 'N' NOT NULL, display_count INT DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_analysis (id INT AUTO_INCREMENT, author_id INT NOT NULL, analysis_category_id SMALLINT NOT NULL, analysis_type_id SMALLINT NOT NULL, analysis_object_id MEDIUMINT NOT NULL, analysis_market_id INT, analysis_stocklist_id INT, analysis_sector_id INT, analysis_title VARCHAR(200) DEFAULT '' NOT NULL, image VARCHAR(100) DEFAULT '' NOT NULL, image_text TEXT NOT NULL, analysis_description TEXT NOT NULL, analysis_votes INT DEFAULT '0' NOT NULL, analysis_views INT DEFAULT '0' NOT NULL, analysis_medal_achived INT DEFAULT '0' NOT NULL, published SMALLINT DEFAULT '0' NOT NULL, created_at DATETIME, updated_at DATETIME, INDEX author_id_idx (author_id), INDEX analysis_category_id_idx (analysis_category_id), INDEX analysis_type_id_idx (analysis_type_id), INDEX analysis_object_id_idx (analysis_object_id), INDEX published_idx (published), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_analysis_comment (id INT AUTO_INCREMENT, analysis_comment TEXT NOT NULL, analysis_id INT DEFAULT '0' NOT NULL, comment_by INT DEFAULT '0' NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_analysis_medal_details (id INT AUTO_INCREMENT, analysis_id INT NOT NULL, analysis_medal_type_id INT NOT NULL, award_note_by_admin TEXT NOT NULL, awarded_by INT NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_analysis_medal_type (id INT AUTO_INCREMENT, analysis_medal_name VARCHAR(200) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_analysis_status (id INT AUTO_INCREMENT, status_name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_analysis_suggestion (id INT AUTO_INCREMENT, analysis_id INT NOT NULL, analysis_suggestion TEXT NOT NULL, analysis_status INT NOT NULL, suggestion_by INT NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_article_category (id INT AUTO_INCREMENT, sbt_category_name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_article_type (id INT AUTO_INCREMENT, type_name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_author_medal_details (id INT AUTO_INCREMENT, author_id INT NOT NULL, author_medal_type_id INT NOT NULL, award_note_by_admin TEXT NOT NULL, awarded_by INT NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_author_medal_type (id INT AUTO_INCREMENT, author_medal_name VARCHAR(200) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_blog_comment (id INT AUTO_INCREMENT, blog_id INT, blog_comment TEXT NOT NULL, comment_by INT, followup_by_mail INT DEFAULT '0', created_at DATETIME, INDEX blog_id_idx (blog_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_blog_profile (id INT AUTO_INCREMENT, user_id INT NOT NULL, my_own_writing TEXT NOT NULL, user_title VARCHAR(50), not_on_stock VARCHAR(100), type_of_speculator VARCHAR(100) DEFAULT '' NOT NULL, broker_used VARCHAR(200) NOT NULL, my_trade VARCHAR(100) DEFAULT '' NOT NULL, my_occupation VARCHAR(100) DEFAULT '' NOT NULL, is_millionaire VARCHAR(100) DEFAULT '' NOT NULL, my_best_trade VARCHAR(200) NOT NULL, my_worst_trade VARCHAR(200) NOT NULL, my_five_best_recommendations VARCHAR(200), my_shortlist VARCHAR(200), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_blog_vote_details (id INT AUTO_INCREMENT, blog_id INT NOT NULL, user_id INT NOT NULL, vote_type_id INT NOT NULL, created_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_combined_analysis_data (id INT AUTO_INCREMENT, analysis_id INT NOT NULL, combined_usernames TEXT NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_favorite (id INT AUTO_INCREMENT, user_id INT NOT NULL, f_type VARCHAR(100) DEFAULT '' NOT NULL, f_id INT, f_name VARCHAR(200) DEFAULT '' NOT NULL, f_notification TINYINT DEFAULT '0' NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_friend_request (id INT AUTO_INCREMENT, contactor_id INT, contactee_id INT, message TEXT NOT NULL, status INT, created_at DATETIME, updated_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_market (id INT AUTO_INCREMENT, sbt_market_name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_market_stocklist (id INT AUTO_INCREMENT, sbt_market_id INT NOT NULL, sbt_stocklist_id INT NOT NULL, INDEX sbt_market_id_idx (sbt_market_id), INDEX sbt_stocklist_id_idx (sbt_stocklist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_messages (id INT AUTO_INCREMENT, message_to INT, message_from INT, message_detail TEXT NOT NULL, created_at DATETIME, INDEX message_to_idx (message_to), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_object (id INT AUTO_INCREMENT, object_name VARCHAR(100) NOT NULL, object_short_name VARCHAR(100), market_id INT, stocklist_id INT, sector_id INT, type_id INT, INDEX market_id_idx (market_id), INDEX sector_id_idx (sector_id), INDEX stocklist_id_idx (stocklist_id), INDEX type_id_idx (type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_publisher_request (id INT AUTO_INCREMENT, author_id INT NOT NULL, request_status INT NOT NULL, created_at DATETIME, INDEX author_id_idx (author_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_publisher_request_status (id INT AUTO_INCREMENT, request_status_name VARCHAR(200) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_recent_visitor (id INT AUTO_INCREMENT, profile_user_id INT, profile_visitor_id INT, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_sector (id INT AUTO_INCREMENT, sector_name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_stock_list (id INT AUTO_INCREMENT, stock_name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_stocklist_sector (id INT AUTO_INCREMENT, sbt_stocklist_id INT NOT NULL, sbt_sector_id INT NOT NULL, INDEX sbt_sector_id_idx (sbt_sector_id), INDEX sbt_stocklist_id_idx (sbt_stocklist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_user_blog (id INT AUTO_INCREMENT, author_id INT NOT NULL, ublog_category_id SMALLINT NOT NULL, ublog_type_id SMALLINT NOT NULL, ublog_object_id MEDIUMINT NOT NULL, ublog_market_id INT, ublog_stocklist_id INT, ublog_sector_id INT, ublog_title VARCHAR(200) DEFAULT '' NOT NULL, ublog_description TEXT NOT NULL, ublog_views INT DEFAULT '0', ublog_votes INT DEFAULT '0', updated_at DATETIME, created_at DATETIME, INDEX author_id_idx (author_id), INDEX ublog_object_id_idx (ublog_object_id), INDEX ublog_category_id_idx (ublog_category_id), INDEX ublog_type_id_idx (ublog_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_user_blog_profile (id INT AUTO_INCREMENT, user_id INT, blog_header_name VARCHAR(200) DEFAULT '' NOT NULL, blog_header_name_color VARCHAR(100) DEFAULT '' NOT NULL, blog_header_info VARCHAR(200) DEFAULT '' NOT NULL, blog_header_info_color VARCHAR(100) DEFAULT '' NOT NULL, blog_header_image VARCHAR(200) DEFAULT '' NOT NULL, blog_page_background_color VARCHAR(100) DEFAULT '' NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_userprofile_photo (id INT AUTO_INCREMENT, user_id INT NOT NULL, profile_photo_name VARCHAR(200) NOT NULL, created_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sbt_vote_details (id INT AUTO_INCREMENT, author_id INT NOT NULL, type_id INT NOT NULL, art_blog_id INT NOT NULL, user_id INT NOT NULL, vote_type_id INT NOT NULL, created_at DATETIME NOT NULL, INDEX author_id_idx (author_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id INT AUTO_INCREMENT, user_id INT, kundnr VARCHAR(10) DEFAULT '' NOT NULL, abonid SMALLINT DEFAULT '1' NOT NULL, userstatid SMALLINT DEFAULT '1' NOT NULL, priv VARCHAR(10) DEFAULT '' NOT NULL, year_of_birth SMALLINT DEFAULT '0' NOT NULL, gender SMALLINT DEFAULT '1' NOT NULL, username VARCHAR(128) NOT NULL, firstname VARCHAR(64) DEFAULT '' NOT NULL, lastname VARCHAR(64) DEFAULT '' NOT NULL, co VARCHAR(30), street VARCHAR(50) NOT NULL, zipcode VARCHAR(6) NOT NULL, city VARCHAR(20) NOT NULL, land TINYINT DEFAULT '1' NOT NULL, email VARCHAR(128) DEFAULT '' NOT NULL, phone VARCHAR(32) DEFAULT '' NOT NULL, regdate DATETIME DEFAULT '1970-01-01 00:00:00' NOT NULL, stopdate DATE DEFAULT '0000-00-00' NOT NULL, betdate DATE DEFAULT '0000-00-00' NOT NULL, inlog SMALLINT DEFAULT '0' NOT NULL, inlogdate DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, activity_cnt INT, from_sbt TINYINT DEFAULT '0' NOT NULL, sbt_active TINYINT DEFAULT '0' NOT NULL, sbt_activation_code INT, hide_profile TINYINT DEFAULT '0' NOT NULL, INDEX user_id_idx (user_id), INDEX abonid_idx (abonid), INDEX userstatid_idx (userstatid), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE subscription (id INT AUTO_INCREMENT, purchase_id INT, product_id INT, product_type_id INT, subscription_duration INT, subscription_duration_unit VARCHAR(200) NOT NULL, scheme_name VARCHAR(200) NOT NULL, start_date DATE, end_date DATE, created_at DATETIME, INDEX purchase_id_idx (purchase_id), INDEX product_id_idx (product_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_status (userstatid SMALLINT AUTO_INCREMENT, userstat VARCHAR(10) NOT NULL, PRIMARY KEY(userstatid)) ENGINE = INNODB;
CREATE TABLE user_transaction (id INT AUTO_INCREMENT, user_id INT NOT NULL, amount_added INT NOT NULL, transaction_date DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE users (username VARCHAR(45), kundnr VARCHAR(10) DEFAULT '' NOT NULL, password VARCHAR(32) DEFAULT '' NOT NULL, abonid SMALLINT DEFAULT '1' NOT NULL, userstatid SMALLINT DEFAULT '1' NOT NULL, priv VARCHAR(10) DEFAULT '' NOT NULL, year_of_birth SMALLINT DEFAULT '0' NOT NULL, gender SMALLINT DEFAULT '1' NOT NULL, firstname VARCHAR(64) DEFAULT '' NOT NULL, lastname VARCHAR(64) DEFAULT '' NOT NULL, co VARCHAR(30), street VARCHAR(50) NOT NULL, zipcode VARCHAR(6) NOT NULL, city VARCHAR(20) NOT NULL, land TINYINT DEFAULT '1' NOT NULL, email VARCHAR(128) DEFAULT '' NOT NULL, phone VARCHAR(32) DEFAULT '' NOT NULL, regdate DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, stopdate DATE DEFAULT '0000-00-00' NOT NULL, betdate DATE DEFAULT '0000-00-00' NOT NULL, inlog SMALLINT DEFAULT '0' NOT NULL, inlogdate DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(username)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE article ADD CONSTRAINT article_type_id_article_type_type_id FOREIGN KEY (type_id) REFERENCES article_type(type_id);
ALTER TABLE article ADD CONSTRAINT article_object_id_objekt_object_id FOREIGN KEY (object_id) REFERENCES objekt(object_id);
ALTER TABLE article ADD CONSTRAINT article_category_id_article_category_category_id FOREIGN KEY (category_id) REFERENCES article_category(category_id);
ALTER TABLE article ADD CONSTRAINT article_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE article ADD CONSTRAINT article_art_statid_article_status_art_statid FOREIGN KEY (art_statid) REFERENCES article_status(art_statid);
ALTER TABLE article_count ADD CONSTRAINT article_count_art_id_article_article_id FOREIGN KEY (art_id) REFERENCES article(article_id);
ALTER TABLE borst_article_comment ADD CONSTRAINT borst_article_comment_article_id_article_article_id FOREIGN KEY (article_id) REFERENCES article(article_id);
ALTER TABLE btshop_article ADD CONSTRAINT btshop_article_btshop_type_id_btshop_article_type_id FOREIGN KEY (btshop_type_id) REFERENCES btshop_article_type(id);
ALTER TABLE btshop_price_details ADD CONSTRAINT btshop_price_details_btshop_article_id_btshop_article_id FOREIGN KEY (btshop_article_id) REFERENCES btshop_article(id);
ALTER TABLE btchart_company_details ADD CONSTRAINT bcbi FOREIGN KEY (company_type_id) REFERENCES btchart_company_category(id);
ALTER TABLE btforum ADD CONSTRAINT btforum_btforum_subcategory_id_btforum_subcategory_id FOREIGN KEY (btforum_subcategory_id) REFERENCES btforum_subcategory(id);
ALTER TABLE btforum ADD CONSTRAINT btforum_btforum_category_id_btforum_category_id FOREIGN KEY (btforum_category_id) REFERENCES btforum_category(id);
ALTER TABLE btforum ADD CONSTRAINT btforum_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE sbt_analysis ADD CONSTRAINT sbt_analysis_published_sbt_analysis_status_id FOREIGN KEY (published) REFERENCES sbt_analysis_status(id);
ALTER TABLE sbt_analysis ADD CONSTRAINT sbt_analysis_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE sbt_analysis ADD CONSTRAINT sbt_analysis_analysis_type_id_sbt_article_type_id FOREIGN KEY (analysis_type_id) REFERENCES sbt_article_type(id);
ALTER TABLE sbt_analysis ADD CONSTRAINT sbt_analysis_analysis_object_id_sbt_object_id FOREIGN KEY (analysis_object_id) REFERENCES sbt_object(id);
ALTER TABLE sbt_analysis ADD CONSTRAINT sbt_analysis_analysis_category_id_sbt_article_category_id FOREIGN KEY (analysis_category_id) REFERENCES sbt_article_category(id);
ALTER TABLE sbt_blog_comment ADD CONSTRAINT sbt_blog_comment_blog_id_sbt_user_blog_id FOREIGN KEY (blog_id) REFERENCES sbt_user_blog(id);
ALTER TABLE sbt_market_stocklist ADD CONSTRAINT sbt_market_stocklist_sbt_stocklist_id_sbt_stock_list_id FOREIGN KEY (sbt_stocklist_id) REFERENCES sbt_stock_list(id);
ALTER TABLE sbt_market_stocklist ADD CONSTRAINT sbt_market_stocklist_sbt_market_id_sbt_market_id FOREIGN KEY (sbt_market_id) REFERENCES sbt_market(id);
ALTER TABLE sbt_messages ADD CONSTRAINT sbt_messages_message_to_sf_guard_user_profile_user_id FOREIGN KEY (message_to) REFERENCES sf_guard_user_profile(user_id);
ALTER TABLE sbt_object ADD CONSTRAINT sbt_object_type_id_sbt_article_type_id FOREIGN KEY (type_id) REFERENCES sbt_article_type(id);
ALTER TABLE sbt_object ADD CONSTRAINT sbt_object_stocklist_id_sbt_stock_list_id FOREIGN KEY (stocklist_id) REFERENCES sbt_stock_list(id);
ALTER TABLE sbt_object ADD CONSTRAINT sbt_object_sector_id_sbt_sector_id FOREIGN KEY (sector_id) REFERENCES sbt_sector(id);
ALTER TABLE sbt_object ADD CONSTRAINT sbt_object_market_id_sbt_market_id FOREIGN KEY (market_id) REFERENCES sbt_market(id);
ALTER TABLE sbt_publisher_request ADD CONSTRAINT sbt_publisher_request_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE sbt_stocklist_sector ADD CONSTRAINT sbt_stocklist_sector_sbt_stocklist_id_sbt_stock_list_id FOREIGN KEY (sbt_stocklist_id) REFERENCES sbt_stock_list(id);
ALTER TABLE sbt_stocklist_sector ADD CONSTRAINT sbt_stocklist_sector_sbt_sector_id_sbt_sector_id FOREIGN KEY (sbt_sector_id) REFERENCES sbt_sector(id);
ALTER TABLE sbt_user_blog ADD CONSTRAINT sbt_user_blog_ublog_type_id_sbt_article_type_id FOREIGN KEY (ublog_type_id) REFERENCES sbt_article_type(id);
ALTER TABLE sbt_user_blog ADD CONSTRAINT sbt_user_blog_ublog_object_id_sbt_object_id FOREIGN KEY (ublog_object_id) REFERENCES sbt_object(id);
ALTER TABLE sbt_user_blog ADD CONSTRAINT sbt_user_blog_ublog_category_id_sbt_article_category_id FOREIGN KEY (ublog_category_id) REFERENCES sbt_article_category(id);
ALTER TABLE sbt_user_blog ADD CONSTRAINT sbt_user_blog_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE sbt_vote_details ADD CONSTRAINT sbt_vote_details_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_userstatid_user_status_userstatid FOREIGN KEY (userstatid) REFERENCES user_status(userstatid);
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_abonid_abon_abonid FOREIGN KEY (abonid) REFERENCES abon(abonid);
ALTER TABLE subscription ADD CONSTRAINT subscription_purchase_id_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchase(id);
ALTER TABLE subscription ADD CONSTRAINT subscription_product_id_btshop_article_id FOREIGN KEY (product_id) REFERENCES btshop_article(id);
ALTER TABLE user_transaction ADD CONSTRAINT user_transaction_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
