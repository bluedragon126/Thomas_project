<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ReminderSubscription', 'doctrine');

/**
 * BaseReminderSubscription
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $subscription_type
 * @property integer $nof_days
 * @property string $subject
 * @property string $email_contain
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * 
 * @method integer              getId()                Returns the current record's "id" value
 * @method integer              getSubscriptionType()  Returns the current record's "subscription_type" value
 * @method integer              getNofDays()           Returns the current record's "nof_days" value
 * @method string               getSubject()           Returns the current record's "subject" value
 * @method string               getEmailContain()      Returns the current record's "email_contain" value
 * @method timestamp            getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp            getUpdatedAt()         Returns the current record's "updated_at" value
 * @method ReminderSubscription setId()                Sets the current record's "id" value
 * @method ReminderSubscription setSubscriptionType()  Sets the current record's "subscription_type" value
 * @method ReminderSubscription setNofDays()           Sets the current record's "nof_days" value
 * @method ReminderSubscription setSubject()           Sets the current record's "subject" value
 * @method ReminderSubscription setEmailContain()      Sets the current record's "email_contain" value
 * @method ReminderSubscription setCreatedAt()         Sets the current record's "created_at" value
 * @method ReminderSubscription setUpdatedAt()         Sets the current record's "updated_at" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReminderSubscription extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reminder_subscription');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('subscription_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nof_days', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('subject', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('email_contain', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}