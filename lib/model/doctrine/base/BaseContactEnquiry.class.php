<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ContactEnquiry', 'doctrine');

/**
 * BaseContactEnquiry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $enq_type
 * @property string $enq_subject
 * @property string $firstname
 * @property string $lastname
 * @property string $email
 * @property string $user_question
 * @property string $comm_id
 * @property integer $is_answered
 * @property timestamp $enq_date
 * @property integer $faster_ans_flag
 * @property string $user_signature
 * @property integer $visningar
 * @property string $replycount
 * @property ContactEnquiryPost $ContactEnquiryPost
 * 
 * @method integer            getId()                 Returns the current record's "id" value
 * @method string             getEnqType()            Returns the current record's "enq_type" value
 * @method string             getEnqSubject()         Returns the current record's "enq_subject" value
 * @method string             getFirstname()          Returns the current record's "firstname" value
 * @method string             getLastname()           Returns the current record's "lastname" value
 * @method string             getEmail()              Returns the current record's "email" value
 * @method string             getUserQuestion()       Returns the current record's "user_question" value
 * @method string             getCommId()             Returns the current record's "comm_id" value
 * @method integer            getIsAnswered()         Returns the current record's "is_answered" value
 * @method timestamp          getEnqDate()            Returns the current record's "enq_date" value
 * @method integer            getFasterAnsFlag()      Returns the current record's "faster_ans_flag" value
 * @method string             getUserSignature()      Returns the current record's "user_signature" value
 * @method integer            getVisningar()          Returns the current record's "visningar" value
 * @method string             getReplycount()         Returns the current record's "replycount" value
 * @method ContactEnquiryPost getContactEnquiryPost() Returns the current record's "ContactEnquiryPost" value
 * @method ContactEnquiry     setId()                 Sets the current record's "id" value
 * @method ContactEnquiry     setEnqType()            Sets the current record's "enq_type" value
 * @method ContactEnquiry     setEnqSubject()         Sets the current record's "enq_subject" value
 * @method ContactEnquiry     setFirstname()          Sets the current record's "firstname" value
 * @method ContactEnquiry     setLastname()           Sets the current record's "lastname" value
 * @method ContactEnquiry     setEmail()              Sets the current record's "email" value
 * @method ContactEnquiry     setUserQuestion()       Sets the current record's "user_question" value
 * @method ContactEnquiry     setCommId()             Sets the current record's "comm_id" value
 * @method ContactEnquiry     setIsAnswered()         Sets the current record's "is_answered" value
 * @method ContactEnquiry     setEnqDate()            Sets the current record's "enq_date" value
 * @method ContactEnquiry     setFasterAnsFlag()      Sets the current record's "faster_ans_flag" value
 * @method ContactEnquiry     setUserSignature()      Sets the current record's "user_signature" value
 * @method ContactEnquiry     setVisningar()          Sets the current record's "visningar" value
 * @method ContactEnquiry     setReplycount()         Sets the current record's "replycount" value
 * @method ContactEnquiry     setContactEnquiryPost() Sets the current record's "ContactEnquiryPost" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContactEnquiry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contact_enquiry');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('enq_type', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('enq_subject', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('firstname', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('lastname', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('user_question', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('comm_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_answered', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('enq_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('faster_ans_flag', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('user_signature', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('visningar', 'integer', 3, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('replycount', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ContactEnquiryPost', array(
             'local' => 'id',
             'foreign' => 'enq_id'));
    }
}