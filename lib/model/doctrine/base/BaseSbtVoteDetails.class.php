<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SbtVoteDetails', 'doctrine');

/**
 * BaseSbtVoteDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $author_id
 * @property integer $type_id
 * @property integer $art_blog_id
 * @property integer $user_id
 * @property integer $vote_type_id
 * @property timestamp $created_at
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer        getId()           Returns the current record's "id" value
 * @method integer        getAuthorId()     Returns the current record's "author_id" value
 * @method integer        getTypeId()       Returns the current record's "type_id" value
 * @method integer        getArtBlogId()    Returns the current record's "art_blog_id" value
 * @method integer        getUserId()       Returns the current record's "user_id" value
 * @method integer        getVoteTypeId()   Returns the current record's "vote_type_id" value
 * @method timestamp      getCreatedAt()    Returns the current record's "created_at" value
 * @method sfGuardUser    getSfGuardUser()  Returns the current record's "sfGuardUser" value
 * @method SbtVoteDetails setId()           Sets the current record's "id" value
 * @method SbtVoteDetails setAuthorId()     Sets the current record's "author_id" value
 * @method SbtVoteDetails setTypeId()       Sets the current record's "type_id" value
 * @method SbtVoteDetails setArtBlogId()    Sets the current record's "art_blog_id" value
 * @method SbtVoteDetails setUserId()       Sets the current record's "user_id" value
 * @method SbtVoteDetails setVoteTypeId()   Sets the current record's "vote_type_id" value
 * @method SbtVoteDetails setCreatedAt()    Sets the current record's "created_at" value
 * @method SbtVoteDetails setSfGuardUser()  Sets the current record's "sfGuardUser" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSbtVoteDetails extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sbt_vote_details');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('author_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('art_blog_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('vote_type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'author_id',
             'foreign' => 'id'));
    }
}