<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SbtFavorite', 'doctrine');

/**
 * BaseSbtFavorite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $f_type
 * @property integer $f_id
 * @property string $f_name
 * @property integer $f_notification
 * @property timestamp $created_at
 * 
 * @method integer     getId()             Returns the current record's "id" value
 * @method integer     getUserId()         Returns the current record's "user_id" value
 * @method string      getFType()          Returns the current record's "f_type" value
 * @method integer     getFId()            Returns the current record's "f_id" value
 * @method string      getFName()          Returns the current record's "f_name" value
 * @method integer     getFNotification()  Returns the current record's "f_notification" value
 * @method timestamp   getCreatedAt()      Returns the current record's "created_at" value
 * @method SbtFavorite setId()             Sets the current record's "id" value
 * @method SbtFavorite setUserId()         Sets the current record's "user_id" value
 * @method SbtFavorite setFType()          Sets the current record's "f_type" value
 * @method SbtFavorite setFId()            Sets the current record's "f_id" value
 * @method SbtFavorite setFName()          Sets the current record's "f_name" value
 * @method SbtFavorite setFNotification()  Sets the current record's "f_notification" value
 * @method SbtFavorite setCreatedAt()      Sets the current record's "created_at" value
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSbtFavorite extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sbt_favorite');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('f_type', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('f_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('f_name', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('f_notification', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}