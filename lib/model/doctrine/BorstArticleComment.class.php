<?php

/**
 * BorstArticleComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class BorstArticleComment extends BaseBorstArticleComment
{
	/*
	*
	* This function returns name of the user who has commented on a perticular article;
	*
	*/
	
	public function getCommentedUsername($user_id) 
	{ 
	 	$username_cri = Doctrine_Query::create()
	   					  ->from('SfGuardUserProfile sup')
						  ->where('sup.user_id = '.$user_id);
                                                  //->where('sup.user_id = '.$user_id.' and use_alias = 0');
		
		$username_data = $username_cri->fetchOne();

		if($username_data) 
		{
			$name = ($username_data->usernamealias) ? $username_data->usernamealias : $username_data->firstname.' '.$username_data->lastname;
			
			return $name;
		}	
		
		/*if(!$username_data)
		{
			$fetch_user_cri = Doctrine_Query::create()
							->from('SfGuardUserProfile sup')
							->where('sup.user_id = '.$user_id.' and use_alias = 1');
			$userdata = $fetch_user_cri->fetchOne();
			
			return $userdata ? $userdata->usernamealias : '';
		}*/
		
		
		return '';
	}


	/*
	*
	* This function returns total no. of comment to a perticular article.
	*
	*/
	
	public function getTotalCommentCount($id) 
	{ 
	 	$comment_data_cri = Doctrine_Query::create()
	   					  ->from('BorstArticleComment bac')
						  ->where('bac.article_id = ?', $id)
						  ->orderBy('bac.id ASC');
		
		$comment_data = $comment_data_cri->execute();

		$cnt = $comment_data ? count($comment_data) :  0;
		return $cnt;
	}
	
	/*
	*
	* This function saves the edited comment.
	*
	*/
	
	public function getSaveComment($comment,$comment_subject) 
	{ 
	 	$this->article_comment = $comment;
        $this->subject = $comment_subject;
		$this->save();
	}
	
	/*
	*
	* This function returns the comment data for a perticular record. 
	*
	*/
	
	public function getSelectedComment($id) 
	{ 
	 	$comment_data_cri = Doctrine_Query::create()
	   					  ->from('BorstArticleComment bac')
						  ->where('bac.id = ?', $id);
		
		$comment_data = $comment_data_cri->fetchOne();

		//$desc = $comment_data ? $comment_data->article_comment :  '';
		//return $desc;
        $desc[0]['article_comment'] = $comment_data->article_comment;
        $desc[1]['subject'] = $comment_data->subject;
        $str = $desc[0]['article_comment'].'_'.$desc[1]['subject'];
		return $str;
	}
	
   /*
	*
	* This function returns array with bt article id.
	*
	*/
	public function getTopCommentedArticleWithCnt($limit) 
	{ 
		$query = Doctrine_Query::create()->select('bac.article_id, count(`article_id`) as cnt')
	   					      ->from('BorstArticleComment bac')
							  ->groupBy('bac.article_id')
							  ->orderBy('count(`article_id`) DESC');
							//->offset(0)
							//->limit($limit);	

		$data = $query->execute();
		
		$id_vote_arr = array(); 
		$i = 0;
		foreach($data as $r)
		{
			if($i < 5)
			{
				$id_vote_arr[$r->article_id] = $r->cnt;
			}
			else break;
			
			$i++;
		}
		return $id_vote_arr;
	}

   /*
	*
	* This function returns array with bt article id.
	*
	*/
	public function getTopCommentedArticle($limit) 
	{ 
		$query = Doctrine_Query::create()->select('bac.article_id, count(`article_id`) as cnt')
	   					      ->from('BorstArticleComment bac')
							  ->groupBy('bac.article_id')
							  ->orderBy('count(`article_id`) DESC');
							//->offset(0)
							//->limit($limit);	

		$data = $query->execute();
		
		$arr = array(); 
		$i = 0;
		foreach($data as $r)
		{
			if($i < 5)
			{
				$arr[$i] = $r->article_id;
			}
			else break;
			
			$i++;
		}
		return $arr;
	}
    
     public function delArticleCommentData($id){  
      
            $del_comment_query = Doctrine_Query::create()
                ->delete('BorstArticleComment bac')
                ->where('bac.id = ?',$id);

            $rows = $del_comment_query->execute();
            return $rows;    
            //echo $del_comment_query->getSqlQuery();
            
        }
}