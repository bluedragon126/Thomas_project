<?php

/**
 * BtchartCompanyDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class BtchartCompanyDetails extends BaseBtchartCompanyDetails
{
    	/*
	*
	* This function returns list of companies.
	*
	*/

	public function getStockList()
    {
		$q = Doctrine_Query::create()                          
		      ->from('BtchartCompanyCategory bcc')
		      ->leftJoin('bcc.BtchartCompanyDetails bcd');
        return $q;                              
        
    } 
    
	public function getStockList2($stock_type=NULL)
    {
		$q = Doctrine_Query::create()                          
                ->from('BtchartCompanyDetails bcd')
                ->orderBy('bcd.created_at DESC');
        
        if($stock_type)
                $q->where('bcd.company_type_id = ?',$stock_type);
        return $q;
                              
    } 
	public function getStockListQuery($column_id,$order, $stock_type=NULL)
    {
		$query = Doctrine_Query::create()                          
                ->from('BtchartCompanyDetails bcd');
        if($stock_type)
                $query->where('bcd.company_type_id = ?',$stock_type);        
		$order = trim($order);
		switch($column_id)
		{
			case 'stockname': $query = $query->orderBy('bcd.company_name '.$order); break;
			case 'stocksymbol': $query = $query->orderBy('bcd.company_symbol '.$order); break;
			case 'stocktype': $query = $query = $query->innerJoin('bcd.BtchartCompanyCategory bcc'); $query = $query->orderBy('bcc.company_type '.$order); break;
			case 'country': $query = $query->orderBy('bcd.country '.$order); break;
			case 'list': $query = $query->orderBy('bcd.list '.$order); break;
            case 'sector': $query = $query->orderBy('bcd.sector '.$order); break;
                        case 'object': $query = $query = $query->LeftJoin('bcd.Objekt bo'); $query = $query->orderBy('bo.object_name '.$order); break;//change by sandeep
		}
		if(!$column_id) $query = $query->orderBy('bcd.id DESC');
        return $query; 
                              
    } 
    public function getStockListFromCategory($category)
    {        
        $q = Doctrine_Query::create()                          
            ->from('BtchartCompanyDetails bcd')
            ->where('bcd.company_type_id=?',$category)
            ->andWhere('bcd.active = 1')
            ->execute(); 
        return $q;
    }
    public function getSelectedStockRecord($stock_id)
    {
		$q = Doctrine_Query::create()                          
            ->from('BtchartCompanyDetails bcd')
            ->where('bcd.id = ?', $stock_id)
            ->andWhere('bcd.active = 1')
            ->fetchOne();
        return $q;
    }
    public function getSelectedStockRecordBackend($stock_id)
    {
		$q = Doctrine_Query::create()                          
            ->from('BtchartCompanyDetails bcd')
            ->where('bcd.id = ?', $stock_id)
            ->fetchOne();
        return $q;
    }    
    // function to delete stock record    
    public function deleteStockRecord($stock_id)
    {        
        $q = Doctrine_Query::create()
            ->delete('BtchartCompanyDetails bcd')
            ->where('bcd.id = ?',$stock_id)
            ->execute();                              
    }    
    
    public function getDefaultStockList()
    {
		$q = Doctrine_Query::create()                          
            ->from('BtchartCompanyDetails bcd')
            ->where('bcd.default_chart=1')
            ->execute(); 
        return $q;
    }
    
    // function to get list of stocks for particular category
    public function getStockListForCategory($category)
    {
        $q = Doctrine_Query::create()
            ->from("BtchartCompanyCategory bcc")
            ->where("bcc.company_type=?",$category)
            ->fetchOne();
        $cat_id = $q->id;
        
        $q = Doctrine_Query::create()                          
            ->from('BtchartCompanyDetails bcd')
            ->where('bcd.company_type_id=?',$cat_id)
            ->andWhere('bcd.active =1')
            ->execute(); 
        return $q;
    }
    public function getStockTypeId($category)
    {
        $q = Doctrine_Query::create()
            ->from("BtchartCompanyCategory bcc")
            ->where("bcc.company_type=?",$category)
            ->fetchOne();
        return $q->id;
    }
    
    public function getBorstObjectIdFromStockSymbol($stock_symbol)
    {
        $q = Doctrine_Query::create()
            ->from("objekt ob")
            ->where("ob.object_name=?",$stock_symbol)
            ->fetchOne();
        return $q->object_id;
       // var_dump($q->object_id);          
    }
    public function getSbtObjectIdFromStockSymbol($stock_symbol)
    {
        $q = Doctrine_Query::create()
            ->from("SbtObject sbt")
            ->where("sbt.object_short_name=?",$stock_symbol)
            ->fetchOne();
        return $q->id;
       // var_dump($q->object_id);          
    }    
    public function getStockName($stock_id)
    {
        $q = Doctrine_Query::create()
            ->from("BtchartCompanyDetails sbt")
            ->where("sbt.id=?",$stock_id)
            ->fetchOne();
        return $q->company_name;        
    }
    public function setEnableAndDisable($arr)
    {
        foreach($arr as $key=>$value){
            if($value=='disable')
            {
                $q = Doctrine_Query::create()
                    ->update('BtchartCompanyDetails bcd')
                    ->set('bcd.active', 0)
                    ->where('bcd.id=?', $key)
                    ->execute(); 
            }
            if($value=='enable')
            {
                $q = Doctrine_Query::create()
                    ->update('BtchartCompanyDetails bcd')
                    ->set('bcd.active', 1)
                    ->where('bcd.id=?', $key)
                    ->execute();                 
            }
            
        }
    }
    public function getStockListIdAndName()
    {
		$q = Doctrine_Query::create()
              //->select('bcd.id', 'bcd.company_name')                          
		      ->from('BtchartCompanyDetails bcd')
              ->execute();
        return $q;                              
        
    }
    public function getStockSymbol($stock_id)
    {
        $q = Doctrine_Query::create()
            ->select('sbt.company_symbol')
            ->from("BtchartCompanyDetails sbt")
            ->where("sbt.id=?",$stock_id)
            ->fetchOne();
        return  strtolower($q->company_symbol);                
    }

	public function getAdvancedSearchedBtchartQuery($arr,$column_id,$order)   
	{ 
		/*$adv_selected_articles_cri = Doctrine_Query::create()
	   					      ->from('SbtAnalysis sa')
							  ->where("sa.analysis_description LIKE '%".$arr['phrase_in_page']."%'")
							  ->andWhere('sa.author_id =?', $arr['user_id'])
							  ->andWhere('sa.created_at BETWEEN ? AND ?', array($arr['start_date_text'], $arr['end_date_text']));*/
		$param_present = 0;
		$query = Doctrine_Query::create()->from('SbtAnalysis sa');
		
		$analysis_status_str = '1,7';
		$query_str = '( sa.published IN ('.$analysis_status_str.') )';
		$query = $query->where($query_str);

		//if($arr['phrase_in_page']) { $query = $query->where("sa.analysis_description LIKE '%".$arr['phrase_in_page']."%'"); $param_present = 1; }
        if($arr['phrase_in_page']) { $query = $query->andWhere("sa.analysis_description LIKE '%".$arr['phrase_in_page']."%'"); $param_present = 1; }
        if($arr['phrase_in_page']) { $query = $query->orWhere("sa.analysis_title LIKE '%".$arr['phrase_in_page']."%'"); $param_present = 1; }
        if($arr['phrase_in_page']) { $query = $query->orWhere("sa.image_text LIKE '%".$arr['phrase_in_page']."%'"); $param_present = 1; }
		//if($arr['user_id']) { $query = $query->andWhere('sa.author_id =?', $arr['user_id']); $param_present = 1; }
		if($arr['adv_search_category']) { $query = $query->andWhere('sa.analysis_category_id =?', $arr['adv_search_category']); $param_present = 1; }
        if($arr['adv_search_type']) { $query = $query->andWhere('sa.analysis_type_id =?', $arr['adv_search_type']); $param_present = 1; }
        if($arr['adv_search_market']) { $query = $query->andWhere('sa.analysis_market_id =?', $arr['adv_search_market']); $param_present = 1; }
		if($arr['adv_search_stock_lista']) { $query = $query->andWhere('sa.analysis_stocklist_id =?', $arr['adv_search_stock_lista']); $param_present = 1; }
		if($arr['adv_search_sector']) { $query = $query->andWhere('sa.analysis_sector_id =?', $arr['adv_search_sector']); $param_present = 1; }
		if($arr['adv_search_object']) { $query = $query->andWhere('sa.analysis_object_id =?', $arr['adv_search_object']); $param_present = 1; }
		if($arr['start_date_text']) { $query = $query->andWhere('sa.created_at BETWEEN ? AND ?', array($arr['start_date_text'], $arr['end_date_text'])); $param_present = 1; }		

		if($param_present == 1)
		{
			switch($column_id)
			{
				case 'date':  $query = $query->orderBy('sa.created_at '.$order); break;
				case 'title':  $query = $query->orderBy('sa.analysis_title '.$order); break;
				case 'category':  $query = $query->orderBy('sa.analysis_category_id '.$order); break;
				case 'type':  $query = $query->orderBy('sa.analysis_type_id '.$order); break;
				case 'object':  $query = $query->orderBy('sa.analysis_object_id '.$order); break;
				//case 'author':  $query = $query->orderBy('sa.author '.$order); break;
				case 'default':  $query = $query->orderBy('sa.created_at DESC'); break;
			}
		}
		else $query = '';
		//echo $query->getSqlQuery();
		return $query;
	}
    
    public static function removeCharacters($str)
    {
        $str = str_replace("/","_",$str);
        $str = str_replace(" ","_",$str);
        return $str;
    }      


}