<?php

/**
 * SbtVoteDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class SbtVoteDetails extends BaseSbtVoteDetails
{
	/*
	*
	* This function addes new record in SbtVoteDetails table.
	*
	*/
	
	public function addVoteDetails($type_id,$article_id,$author_id,$user_id,$vote_type_id) 
	{ 
		$new_obj = new SbtVoteDetails();
		
		$new_obj->type_id = $type_id;
		$new_obj->author_id = $author_id;
		$new_obj->art_blog_id = $article_id;
		$new_obj->user_id = $user_id;
		$new_obj->vote_type_id = $vote_type_id;
		$new_obj->created_at = date("Y-m-d H:i:s");
		$new_obj->save();
	}
	
   /*
	*
	* This function to find a perticular record.
	*
	*/
	
	public function findVoteDetails($type_id,$article_id,$user_id) 
	{ 
		$find_article_cri = Doctrine_Query::create()
	   					      ->from('SbtVoteDetails svd')
						      ->where('svd.type_id = ? AND svd.art_blog_id = ? AND svd.user_id = ?', array($type_id,$article_id,$user_id));

		$one_article_data = $find_article_cri->fetchOne();
		
		if($one_article_data)	return 1;
		else return 0;
	}
	
   /*
	*
	* This function finds the no. of stars to a perticular article.
	*
	*/
	
	public function getStarForArticle($article_id) 
	{ 
		$find_article_cri = Doctrine_Query::create()
		                      ->select('svd.art_blog_id,svd.vote_type_id')
	   					      ->from('SbtVoteDetails svd')
						      ->where('svd.type_id = ? AND svd.art_blog_id = ?', array(1,$article_id));

		$data = $find_article_cri->fetchArray();
		$type_of_star_cnt = 0;
		
		for($i=0; $i<count($data); $i++)
		{
			$type_of_star_cnt = $type_of_star_cnt + $data[$i]['vote_type_id'];
		}
		
		$no_of_stars = round($type_of_star_cnt / $i);
		return $no_of_stars;
	}
	
   /*
	*
	* This function to find no of votes for a perticular article.
	*
	*/
	public function getArticleVoteCount($article_id) 
	{ 
		$all_article_cri = Doctrine_Query::create()
	   					      ->from('SbtVoteDetails svd')
						      ->where('svd.type_id = ? AND svd.art_blog_id = ? ', array(1,$article_id));

		$one_article_data = $all_article_cri->execute();
		
		return count($one_article_data);
	}
	
   /*
	*
	* This function returns array with analysis id and votes cnt.
	*
	*/
	public function getTopVotedAnalysisWithCnt($limit) 
	{ 
		$query = Doctrine_Query::create()->select('svd.art_blog_id, count(`art_blog_id`) as cnt')
										  ->from('SbtVoteDetails svd')
										  ->groupBy('svd.art_blog_id')
										  ->orderBy('count(`art_blog_id`) DESC');
										//->offset(0)
										//->limit($limit);	

		$data = $query->execute();
		
		$id_vote_arr = array(); 
		$i = 0;
		foreach($data as $r)
		{
			if($i < 5)
			{
				$id_vote_arr[$r->art_blog_id] = $r->cnt;
			}
			else break;
			
			$i++;
		}
		
		return $id_vote_arr;
	}
	
   /*
	*
	* This function returns array with analysis id.
	*
	*/
	public function getTopVotedAnalysis($limit) 
	{ 
		$query = Doctrine_Query::create()->select('svd.art_blog_id, count(`art_blog_id`) as cnt')
	   					      ->from('SbtVoteDetails svd')
							  ->groupBy('svd.art_blog_id')
							  ->orderBy('count(`art_blog_id`) DESC');
							//  ->offset(0)
							  //->limit($limit);	

		$data = $query->execute();
		
		$arr = array(); 
		$i = 0;
		foreach($data as $r)
		{
			if($i < 5)
			{
				$arr[$i] = $r->art_blog_id;
			}
			else break;
			
			$i++;
		}
		
		return $arr;
	}
	
   /*
	*
	* This function returns author ids of most voted bloggers.
	*
	*/
	public function getTopThreeMostVotedBlogger($limit) 
	{ 
		$query = Doctrine_Query::create()->select('DISTINCT svd.author_id, count(`type_id`) as cnt')
				   					     ->from('SbtVoteDetails svd')
							             ->where('svd.type_id = ?',2)
							             ->groupBy('svd.author_id')
							             ->orderBy('cnt DESC')
							             ->offset(0)
							             ->limit($limit);	

		$data = $query->execute();
		
		$arr = array(); 
		$i = 0;
		foreach($data as $r)
		{
			$arr[$i] = $r->author_id;
			$i++;
		}
		return $arr;
	}
	
   /*
	*
	* This function return records related to specific blog.
	*
	*/
	public function deleteBlogRelatedRecords($blog_id) 
	{ 
		$query = Doctrine_Query::create()->from('SbtVoteDetails svd')->where('svd.type_id = ? AND svd.art_blog_id = ? ', array(2,$blog_id));
		$data = $query->execute();
		
		foreach($data as $rec)
		{
			$rec->delete();
		}
	}
	
   /*
	*
	* This function return records related to specific blog.
	*
	*/
	public function deleteAnalysisRelatedRecords($analysis_id) 
	{ 
		$query = Doctrine_Query::create()->from('SbtVoteDetails svd')->where('svd.type_id = ? AND svd.art_blog_id = ? ', array(1,$analysis_id));
		$data = $query->execute();
		
		foreach($data as $rec)
		{
			$rec->delete();
		}
	}
}