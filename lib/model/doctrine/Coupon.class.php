<?php

/**
 * Coupon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Coupon extends BaseCoupon
{
    public function getAllCouponQuery() {
        $query = Doctrine_Query::create()->from('Coupon ss')->orderBy('ss.created_at DESC');
        return $query;
    }
    
    
    
    public function getSubscriptionOfUserQuery($column_id, $order) {

        $query = Doctrine_Query::create();
        $query->from('Coupon s');

        switch ($column_id) {
            case 'code': $query = $query->orderBy('s.coupon_code ' . $order);
                break;  
            case 'status': $query = $query->orderBy('s.status ' . $order);
                break;  
            case 'date': $query = $query->orderBy('s.updated_at ' . $order);
                 break;
            case 'default': $query = $query->orderBy('s.created_at DESC');
                break;
        }
        // print_r($query->getSqlQuery());//exit;


        return $query;
    }
    
    
    public function getAllCouponCode()
    {
		$q = Doctrine_Query::create()
            ->from('Coupon c')
            ->addWhere('c.status = ?',0)
            ->orderBy('c.created_at DESC')
            ->execute();
        $article_title_arr = array();
        foreach ($q as $data)
        {
            $article_title_arr[$data->id] = $data->coupon_code;
        }
        return $article_title_arr;               
    }
    
    
    public function getAllSendCouponQuery() {
        //$query = Doctrine_Query::create()->from('CouponDetails ss');
        //return $query;
        
        $query_str = "SELECT cd.id as cd_id, cd.user_id as cd_user_id, cd.product_id as cd_product_id,
                cd.couponcode_id as cd_couponcode_id, cd.email as cd_email, cd.status as cd_status, 
                cd.IS_INACTIVE as cd_IS_INACTIVE, cd.CREATED_AT as cd_CREATED_AT, cd.UPDATED_AT as cd_UPDATED_AT, 
                c.id as c_id, c.code as c_code, c.code_desc as c_code_desc, c.coupon_code as c_coupon_code,
                c.status as c_status, c.CREATED_AT as c_CREATED_AT, c.UPDATED_AT as c_UPDATED_AT ,
                bt.id as bt_id, bt.btshop_article_title as bt_btshop_article_title 
                FROM coupon_details cd 
                LEFT JOIN coupon c ON c.id=cd.couponcode_id 
                LEFT JOIN btshop_article bt ON bt.id=cd.product_id 
                WHERE cd.status = 'Pending' ORDER BY cd.CREATED_AT DESC";

        $q = Doctrine_Manager::getInstance()->getCurrentConnection();
        $stmt = $q->prepare($query_str);
        $stmt->execute();
        return $results_asper_prod = $stmt->fetchAll(PDO::FETCH_ASSOC);
    }
    
    
    
    public function getAllSendCoupon($column_id, $order) {

        $query = Doctrine_Query::create();
        $query->from('CouponDetails s');

        switch ($column_id) {
            case 'code': $query = $query->orderBy('s.couponcode_id ' . $order);
                break; 
            case 'email': $query = $query->orderBy('s.email ' . $order);
                break; 
            case 'status': $query = $query->orderBy('s.status ' . $order);
                break;  
            case 'default': $query = $query->orderBy('s.created_at DESC');
                break;
        }
        // print_r($query->getSqlQuery());//exit;


        return $query;
    }
    
    public function getAllCouponDetailsQuery() {
        $query = Doctrine_Query::create()->from('CouponDetails ss');
        return $query;
    }
    
    
    public function getOneSendCouponQuery($cdId) {
        //$query = Doctrine_Query::create()->from('CouponDetails ss');
        //return $query;
        
        $query_str = "SELECT cd.id as cd_id, cd.user_id as cd_user_id, cd.product_id as cd_product_id,
                cd.couponcode_id as cd_couponcode_id, cd.email as cd_email, cd.status as cd_status, 
                cd.IS_INACTIVE as cd_IS_INACTIVE, cd.CREATED_AT as cd_CREATED_AT, cd.UPDATED_AT as cd_UPDATED_AT, 
                c.id as c_id, c.code as c_code, c.code_desc as c_code_desc, c.coupon_code as c_coupon_code,
                c.status as c_status, c.CREATED_AT as c_CREATED_AT, c.UPDATED_AT as c_UPDATED_AT ,
                bt.id as bt_id, bt.btshop_article_title as bt_btshop_article_title 
                FROM coupon_details cd 
                LEFT JOIN coupon c ON c.id=cd.couponcode_id 
                LEFT JOIN btshop_article bt ON bt.id=cd.product_id 
                WHERE cd.id = $cdId 
                ORDER BY cd.id";

        $q = Doctrine_Manager::getInstance()->getCurrentConnection();
        $stmt = $q->prepare($query_str);
        $stmt->execute();
        return $results_asper_prod = $stmt->fetchAll(PDO::FETCH_ASSOC);
    }
    
    
    public function getAllUsedCouponQuery() {
        //$query = Doctrine_Query::create()->from('CouponDetails ss');
        //return $query;
        
        $query_str = "SELECT cd.id as cd_id, cd.user_id as cd_user_id, cd.product_id as cd_product_id,
                cd.couponcode_id as cd_couponcode_id, cd.email as cd_email, cd.status as cd_status, 
                cd.IS_INACTIVE as cd_IS_INACTIVE, cd.CREATED_AT as cd_CREATED_AT, cd.UPDATED_AT as cd_UPDATED_AT, 
                c.id as c_id, c.code as c_code, c.code_desc as c_code_desc, c.coupon_code as c_coupon_code,
                c.status as c_status, c.CREATED_AT as c_CREATED_AT, c.UPDATED_AT as c_UPDATED_AT ,
                bt.id as bt_id, bt.btshop_article_title as bt_btshop_article_title 
                FROM coupon_details cd 
                LEFT JOIN coupon c ON c.id=cd.couponcode_id 
                LEFT JOIN btshop_article bt ON bt.id=cd.product_id 
                WHERE cd.status = 'Inprocess' OR cd.status = 'Completed' 
                ORDER BY cd.CREATED_AT DESC";

        $q = Doctrine_Manager::getInstance()->getCurrentConnection();
        $stmt = $q->prepare($query_str);
        $stmt->execute();
        return $results_asper_prod = $stmt->fetchAll(PDO::FETCH_ASSOC);
    }
}