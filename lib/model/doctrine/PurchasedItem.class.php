<?php

/**
 * PurchasedItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sisterbt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PurchasedItem extends BasePurchasedItem {
    /*
     *
     * This function saves the list of purchased product.
     *
     */

    public function savePurchasedItemList($id, $arr, $product_arr, $price_arr, $product_qty_arr, $price_detail_id_arr, $articleornot) {
        $btshop_article = new BtShopArticle();
        $price_dtl = new BtShopPriceDetails();

        $products_data = $btshop_article->getProductInOrder($product_arr);
        $i = 0;
        foreach ($products_data as $data) {
            $purchasedItem = new PurchasedItem();
            $purchasedItem->purchase_id = $id;
            $purchasedItem->product_id = $data['p_id'];
            $purchasedItem->quantity = $product_qty_arr[$i];
            //$purchasedItem->price_per_unit = $price_arr[$i];
            $purchasedItem->articleornot = $articleornot;

            $rec = $price_dtl->getSearchRecord($price_detail_id_arr[$i]);
            $purchasedItem->product_text = $rec->btshop_product_text;


            $mul = $product_qty_arr[$i] * $price_arr[$i];


            //code by sandeep
            $prod_Id = $data['p_id'];
            $user_Id = $arr['user_id'];
            $user_email = sfContext::getInstance()->getUser()->getAttribute('email', '', 'userProperty');
            $coupon_code = sfContext::getInstance()->getUser()->getAttribute('coupon_code');
            $coupon_id = sfContext::getInstance()->getUser()->getAttribute('coupon_id');
            $final_totals = sfContext::getInstance()->getUser()->getAttribute('final_total');
            $final_dicount = sfContext::getInstance()->getUser()->getAttribute('final_dicount');

            $query_str = "SELECT cd.id as cd_id, cd.user_id as cd_user_id, cd.product_id as cd_product_id,
            cd.couponcode_id as cd_couponcode_id, cd.email as cd_email, cd.status as cd_status, 
            cd.IS_INACTIVE as cd_IS_INACTIVE, cd.CREATED_AT as cd_CREATED_AT, cd.UPDATED_AT as cd_UPDATED_AT, 
            c.id as c_id, c.code as c_code, c.code_desc as c_code_desc, c.coupon_code as c_coupon_code,
            c.status as c_status, c.CREATED_AT as c_CREATED_AT, c.UPDATED_AT as c_UPDATED_AT 
            FROM coupon_details cd 
            LEFT JOIN coupon c ON c.id=cd.couponcode_id 
            WHERE if( cd.email = '', '', cd.email ) = if( cd.email = '', '', '$user_email' ) AND cd.product_id = $prod_Id AND cd.status = 'Inprocess' AND cd.IS_INACTIVE = 0 AND c.status = 0 ORDER BY cd.CREATED_AT DESC ";

            //echo $query_str; die;
            $q = Doctrine_Manager::getInstance()->getCurrentConnection();
            $stmt = $q->prepare($query_str);
            $stmt->execute();
            $results = $stmt->fetchAll(PDO::FETCH_ASSOC);

            
            if (count($results) > 0) {
                foreach ($results as $coupon_price) {
                        //$c_price = explode('_', $coupon_price['c_code']);
                    
                        if($product_qty_arr[$i]>1){
                            $discounted_amnt = ($mul * ($coupon_price['c_code'] / $product_qty_arr[$i])) / 100;
                            $final_amnt = $mul - $discounted_amnt;
                            $final_vat = ($final_amnt * 20 ) / 100;                            
                            $purchasedItem->total_price = $final_amnt; 
                            $purchasedItem->price_per_unit = $final_amnt / $product_qty_arr[$i];
                            $purchasedItem->vat = $final_vat;
                        }else{
                            $discounted_amnt = ($mul * $coupon_price['c_code']) / 100;
                            $final_amnt = $mul - $discounted_amnt;
                            $final_vat = ($final_amnt * 20 ) / 100;
                            $purchasedItem->price_per_unit = $final_amnt;
                            $purchasedItem->total_price = $final_amnt;
                            $purchasedItem->vat = $final_vat;
                        }

                        $rows = Doctrine_Query::create()
                                ->update('CouponDetails')
                                ->set('status', '?', "Completed")
                                ->where('id = ?', $coupon_price['cd_id'])
                                ->execute();
                    }
            }
            else {
                $purchasedItem->price_per_unit = $price_arr[$i];
                $purchasedItem->total_price = $mul;
                $purchasedItem->vat = $arr['vat'];
            }            
            /*if (count($results) > 0) {
                foreach ($results as $coupon_price) {
                    $c_price = explode('_', $coupon_price['c_code']);
                    $discounted_amnt = ($mul * $c_price[0]) / 100;
                    $final_amnt = $mul - $discounted_amnt;
                    $final_vat = ($final_amnt * 20 ) / 100;
                    $purchasedItem->total_price = $final_amnt; //code change by sandeep
                    $purchasedItem->vat = $final_vat; //code change by sandeep

                    $rows = Doctrine_Query::create()
                            ->update('CouponDetails')
                            ->set('status', '?', "Completed")
                            ->where('id = ?', $coupon_price['cd_id'])
                            ->execute();
                }
            } else {
                $purchasedItem->total_price = $mul; //code change by sandeep
                $purchasedItem->vat = $arr['vat']; //code change by sandeep
            }*/
            //code by sandeep end
            //$purchasedItem->total_price = $mul;//original code
            //$purchasedItem->vat = $arr['vat'];//original code

            $purchasedItem->shipping = $arr['shipping'];
            $purchasedItem->created_at = date('Y-m-d H:i:s');
            $purchasedItem->save();

            if (in_array($data['p_type'], array(5, 6, 7, 8, 9))) {// 9 added for btshop plusarticle sandeep
                $subscription = new Subscription();
                $subscription->addSubscription($id, $data['p_id'], $data['p_type'], $price_detail_id_arr[$i], date('Y-m-d H:i:s'), $data['chart_type'], $articleornot);
            }
            $i++;
        }
    }

    /*
     *
     * This function saves the list of purchased individual article product.
     *
     */

    public function savePurchasedItemListArticle($id, $arr, $product_arr, $price_arr, $product_qty_arr, $articleornot) {
        $article_data = new Article();
        //$products_data = $article_data->getPerticularArticle($product_arr);

        
        
        $purchasedItem = new PurchasedItem();
        $purchasedItem->purchase_id = $id;
        $purchasedItem->product_id = $product_arr;
        $purchasedItem->quantity = $product_qty_arr;
        $purchasedItem->price_per_unit = $price_arr;
        $purchasedItem->articleornot = $articleornot;


        $mul = $product_qty_arr * $price_arr;

        $purchasedItem->total_price = $mul; //code change by sandeep
        $purchasedItem->vat = $arr['vat']; //code change by sandeep

        $purchasedItem->created_at = date('Y-m-d H:i:s');
        $purchasedItem->save();

        $subscription = new Subscription();
        $subscription->addSubscriptionRecordArticle($id, $product_arr, 9, $price_arr, date('Y-m-d H:i:s'), $articleornot);
    }

    /*
     *
     * This function fetches purchased item for a perticular purchase.
     *
     */

    public function fecthPurchasedItemList($purchased_id) {
        $query = Doctrine_Query::create()->from('PurchasedItem pit')->where('pit.purchase_id = ? ', $purchased_id);
        $query = $query->orderBy('pit.id ASC');
        $data = $query->execute();

        return $data;
    }

    /*
     *
     * This function fetches purchased item for a perticular purchase and returns any one product from it.
     *
     */

    public function getOnePurchasedItem($purchased_id) {
        $product_article = new BtShopArticle();
        $article = new Article();

        $query = Doctrine_Query::create()->from('PurchasedItem pit')->where('pit.purchase_id = ? ', $purchased_id);
        $query = $query->orderBy('pit.id ASC');
        $item_list = $query->execute();

        $info_arr = array();

        foreach ($item_list as $data) {
            if($data->articleornot){
                $art_data = $article->getPerticularArticle($data->product_id);
                $info_arr['title'] = $art_data[0]['p_title'];
                $info_arr['shipping'] = '';
                $info_arr['individualArt'] = 1;
            }else{
                $art_data = $product_article->getShopArticleSpecificDetails($data->product_id);
                $info_arr['title'] = $art_data[0]['p_title'];
                $info_arr['shipping'] = $data->shipping;
                $info_arr['individualArt'] = 0;
            }
            break;
        }

        return $info_arr;
    }

}